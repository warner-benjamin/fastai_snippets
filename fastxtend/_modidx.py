# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/',
                'doc_host': 'https://fastxtend.benjaminwarner.dev',
                'git_url': 'https://github.com/warner-benjamin/fastxtend',
                'lib_path': 'fastxtend'},
  'syms': { 'fastxtend.audio.all': {},
            'fastxtend.audio.augment': { 'fastxtend.audio.augment.AmplitudeToDB': ( 'audio.augment.html#amplitudetodb',
                                                                                    'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.AmplitudeToDB.__init__': ( 'audio.augment.html#amplitudetodb.__init__',
                                                                                             'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.AmplitudeToDB.encodes': ( 'audio.augment.html#amplitudetodb.encodes',
                                                                                            'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.AmplitudeToDB.to': ( 'audio.augment.html#amplitudetodb.to',
                                                                                       'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.AmplitudeToDBMode': ( 'audio.augment.html#amplitudetodbmode',
                                                                                        'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.AudioNormalize': ( 'audio.augment.html#audionormalize',
                                                                                     'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.AudioNormalize.__init__': ( 'audio.augment.html#audionormalize.__init__',
                                                                                              'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.AudioNormalize.encodes': ( 'audio.augment.html#audionormalize.encodes',
                                                                                             'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.AudioNormalize.from_stats': ( 'audio.augment.html#audionormalize.from_stats',
                                                                                                'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.AudioNormalize.setups': ( 'audio.augment.html#audionormalize.setups',
                                                                                            'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.AudioPadMode': ( 'audio.augment.html#audiopadmode',
                                                                                   'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Flip': ('audio.augment.html#flip', 'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Flip.__init__': ( 'audio.augment.html#flip.__init__',
                                                                                    'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Flip.encodes': ( 'audio.augment.html#flip.encodes',
                                                                                   'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.FrequencyMasking': ( 'audio.augment.html#frequencymasking',
                                                                                       'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.FrequencyMasking.__init__': ( 'audio.augment.html#frequencymasking.__init__',
                                                                                                'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.FrequencyMasking.encodes': ( 'audio.augment.html#frequencymasking.encodes',
                                                                                               'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Noise': ('audio.augment.html#noise', 'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Noise.__init__': ( 'audio.augment.html#noise.__init__',
                                                                                     'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Noise.before_call': ( 'audio.augment.html#noise.before_call',
                                                                                        'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Noise.encodes': ( 'audio.augment.html#noise.encodes',
                                                                                    'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.NoiseColor': ( 'audio.augment.html#noisecolor',
                                                                                 'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PeakNorm': ('audio.augment.html#peaknorm', 'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PeakNorm.__init__': ( 'audio.augment.html#peaknorm.__init__',
                                                                                        'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PeakNorm.encodes': ( 'audio.augment.html#peaknorm.encodes',
                                                                                       'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PitchShift': ( 'audio.augment.html#pitchshift',
                                                                                 'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PitchShift.__init__': ( 'audio.augment.html#pitchshift.__init__',
                                                                                          'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PitchShift._validate_fast_shifts': ( 'audio.augment.html#pitchshift._validate_fast_shifts',
                                                                                                       'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PitchShift.before_call': ( 'audio.augment.html#pitchshift.before_call',
                                                                                             'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PitchShift.encodes': ( 'audio.augment.html#pitchshift.encodes',
                                                                                         'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PitchShiftOrTimeStretch': ( 'audio.augment.html#pitchshiftortimestretch',
                                                                                              'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PitchShiftOrTimeStretch.__init__': ( 'audio.augment.html#pitchshiftortimestretch.__init__',
                                                                                                       'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PitchShiftOrTimeStretch.encodes': ( 'audio.augment.html#pitchshiftortimestretch.encodes',
                                                                                                      'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PitchShiftTA': ( 'audio.augment.html#pitchshiftta',
                                                                                   'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PitchShiftTA.__init__': ( 'audio.augment.html#pitchshiftta.__init__',
                                                                                            'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PitchShiftTA.before_call': ( 'audio.augment.html#pitchshiftta.before_call',
                                                                                               'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PitchShiftTA.encodes': ( 'audio.augment.html#pitchshiftta.encodes',
                                                                                           'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.RandomCropPad': ( 'audio.augment.html#randomcroppad',
                                                                                    'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.RandomCropPad.__init__': ( 'audio.augment.html#randomcroppad.__init__',
                                                                                             'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.RandomCropPad.before_call': ( 'audio.augment.html#randomcroppad.before_call',
                                                                                                'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.RandomCropPad.encodes': ( 'audio.augment.html#randomcroppad.encodes',
                                                                                            'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Roll': ('audio.augment.html#roll', 'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Roll.__init__': ( 'audio.augment.html#roll.__init__',
                                                                                    'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Roll.before_call': ( 'audio.augment.html#roll.before_call',
                                                                                       'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Roll.encodes': ( 'audio.augment.html#roll.encodes',
                                                                                   'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.TensorAudio.crop_pad': ( 'audio.augment.html#tensoraudio.crop_pad',
                                                                                           'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.TensorAudio.pitch_shift': ( 'audio.augment.html#tensoraudio.pitch_shift',
                                                                                              'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.TensorAudio.time_stretch': ( 'audio.augment.html#tensoraudio.time_stretch',
                                                                                               'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.TimeMasking': ( 'audio.augment.html#timemasking',
                                                                                  'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.TimeMasking.__init__': ( 'audio.augment.html#timemasking.__init__',
                                                                                           'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.TimeMasking.encodes': ( 'audio.augment.html#timemasking.encodes',
                                                                                          'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.TimeStretch': ( 'audio.augment.html#timestretch',
                                                                                  'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.TimeStretch.__init__': ( 'audio.augment.html#timestretch.__init__',
                                                                                           'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.TimeStretch._validate_fast_stretches': ( 'audio.augment.html#timestretch._validate_fast_stretches',
                                                                                                           'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.TimeStretch.before_call': ( 'audio.augment.html#timestretch.before_call',
                                                                                              'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.TimeStretch.encodes': ( 'audio.augment.html#timestretch.encodes',
                                                                                          'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Volume': ('audio.augment.html#volume', 'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Volume.__init__': ( 'audio.augment.html#volume.__init__',
                                                                                      'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Volume.before_call': ( 'audio.augment.html#volume.before_call',
                                                                                         'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Volume.encodes': ( 'audio.augment.html#volume.encodes',
                                                                                     'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.VolumeBatch': ( 'audio.augment.html#volumebatch',
                                                                                  'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.VolumeBatch.__init__': ( 'audio.augment.html#volumebatch.__init__',
                                                                                           'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.VolumeBatch.before_call': ( 'audio.augment.html#volumebatch.before_call',
                                                                                              'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.VolumeBatch.encodes': ( 'audio.augment.html#volumebatch.encodes',
                                                                                          'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.VolumeMode': ( 'audio.augment.html#volumemode',
                                                                                 'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.VolumeOrPeakNorm': ( 'audio.augment.html#volumeorpeaknorm',
                                                                                       'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.VolumeOrPeakNorm.__init__': ( 'audio.augment.html#volumeorpeaknorm.__init__',
                                                                                                'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.VolumeOrPeakNorm.before_call': ( 'audio.augment.html#volumeorpeaknorm.before_call',
                                                                                                   'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.VolumeOrPeakNorm.encodes': ( 'audio.augment.html#volumeorpeaknorm.encodes',
                                                                                               'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment._combinations_without_repetition': ( 'audio.augment.html#_combinations_without_repetition',
                                                                                                       'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment._get_audio_attr': ( 'audio.augment.html#_get_audio_attr',
                                                                                      'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment._get_fast_shifts': ( 'audio.augment.html#_get_fast_shifts',
                                                                                       'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment._get_fast_stretches': ( 'audio.augment.html#_get_fast_stretches',
                                                                                          'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment._semitones_to_ratio': ( 'audio.augment.html#_semitones_to_ratio',
                                                                                          'fastxtend/audio/augment.py')},
            'fastxtend.audio.core': { 'fastxtend.audio.core.TensorAudio': ('audio.core.html#tensoraudio', 'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorAudio.__new__': ( 'audio.core.html#tensoraudio.__new__',
                                                                                    'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorAudio.channels': ( 'audio.core.html#tensoraudio.channels',
                                                                                     'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorAudio.create': ( 'audio.core.html#tensoraudio.create',
                                                                                   'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorAudio.duration': ( 'audio.core.html#tensoraudio.duration',
                                                                                     'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorAudio.hear': ( 'audio.core.html#tensoraudio.hear',
                                                                                 'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorAudio.samples': ( 'audio.core.html#tensoraudio.samples',
                                                                                    'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorAudio.save': ( 'audio.core.html#tensoraudio.save',
                                                                                 'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorAudio.show': ( 'audio.core.html#tensoraudio.show',
                                                                                 'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorMelSpec': ('audio.core.html#tensormelspec', 'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorMelSpec._all_show_args': ( 'audio.core.html#tensormelspec._all_show_args',
                                                                                             'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorMelSpec.channels': ( 'audio.core.html#tensormelspec.channels',
                                                                                       'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorMelSpec.create': ( 'audio.core.html#tensormelspec.create',
                                                                                     'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorMelSpec.duration': ( 'audio.core.html#tensormelspec.duration',
                                                                                       'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorMelSpec.height': ( 'audio.core.html#tensormelspec.height',
                                                                                     'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorMelSpec.width': ( 'audio.core.html#tensormelspec.width',
                                                                                    'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorSpec': ('audio.core.html#tensorspec', 'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorSpec.__getattr__': ( 'audio.core.html#tensorspec.__getattr__',
                                                                                       'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorSpec._all_show_args': ( 'audio.core.html#tensorspec._all_show_args',
                                                                                          'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorSpec._colorbar_fmt': ( 'audio.core.html#tensorspec._colorbar_fmt',
                                                                                         'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorSpec.channels': ( 'audio.core.html#tensorspec.channels',
                                                                                    'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorSpec.create': ( 'audio.core.html#tensorspec.create',
                                                                                  'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorSpec.duration': ( 'audio.core.html#tensorspec.duration',
                                                                                    'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorSpec.height': ( 'audio.core.html#tensorspec.height',
                                                                                  'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorSpec.show': ( 'audio.core.html#tensorspec.show',
                                                                                'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorSpec.width': ( 'audio.core.html#tensorspec.width',
                                                                                 'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.get_usable_kwargs': ( 'audio.core.html#get_usable_kwargs',
                                                                                  'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.show_audio_signal': ( 'audio.core.html#show_audio_signal',
                                                                                  'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.show_spectrogram': ( 'audio.core.html#show_spectrogram',
                                                                                 'fastxtend/audio/core.py')},
            'fastxtend.audio.data': { 'fastxtend.audio.data.AudioBlock': ('audio.data.html#audioblock', 'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.MelSpecBlock': ('audio.data.html#melspecblock', 'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.MelSpectrogram': ('audio.data.html#melspectrogram', 'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.MelSpectrogram.__init__': ( 'audio.data.html#melspectrogram.__init__',
                                                                                        'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.MelSpectrogram._get_attrs': ( 'audio.data.html#melspectrogram._get_attrs',
                                                                                          'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.MelSpectrogram.encodes': ( 'audio.data.html#melspectrogram.encodes',
                                                                                       'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.MelSpectrogram.to': ( 'audio.data.html#melspectrogram.to',
                                                                                  'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.SpecBlock': ('audio.data.html#specblock', 'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.Spectrogram': ('audio.data.html#spectrogram', 'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.Spectrogram.__init__': ( 'audio.data.html#spectrogram.__init__',
                                                                                     'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.Spectrogram._get_attrs': ( 'audio.data.html#spectrogram._get_attrs',
                                                                                       'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.Spectrogram.encodes': ( 'audio.data.html#spectrogram.encodes',
                                                                                    'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.Spectrogram.to': ('audio.data.html#spectrogram.to', 'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.show_batch': ('audio.data.html#show_batch', 'fastxtend/audio/data.py')},
            'fastxtend.audio.learner': { 'fastxtend.audio.learner.StackSpecCallback': ( 'audio.learner.html#stackspeccallback',
                                                                                        'fastxtend/audio/learner.py'),
                                         'fastxtend.audio.learner.StackSpecCallback.before_batch': ( 'audio.learner.html#stackspeccallback.before_batch',
                                                                                                     'fastxtend/audio/learner.py'),
                                         'fastxtend.audio.learner.audio_learner': ( 'audio.learner.html#audio_learner',
                                                                                    'fastxtend/audio/learner.py')},
            'fastxtend.audio.mixup': { 'fastxtend.audio.mixup.AudioCutMix': ('audio.mixup.html#audiocutmix', 'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMix.__init__': ( 'audio.mixup.html#audiocutmix.__init__',
                                                                                       'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMix._multi_cutmix': ( 'audio.mixup.html#audiocutmix._multi_cutmix',
                                                                                            'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMix._uniform_cutmix': ( 'audio.mixup.html#audiocutmix._uniform_cutmix',
                                                                                              'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMix.before_batch': ( 'audio.mixup.html#audiocutmix.before_batch',
                                                                                           'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMix.rand_cut': ( 'audio.mixup.html#audiocutmix.rand_cut',
                                                                                       'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMixUp': ( 'audio.mixup.html#audiocutmixup',
                                                                                'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMixUp.__init__': ( 'audio.mixup.html#audiocutmixup.__init__',
                                                                                         'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMixUp.before_batch': ( 'audio.mixup.html#audiocutmixup.before_batch',
                                                                                             'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMixUpAugment': ( 'audio.mixup.html#audiocutmixupaugment',
                                                                                       'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMixUpAugment.__init__': ( 'audio.mixup.html#audiocutmixupaugment.__init__',
                                                                                                'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMixUpAugment.after_cancel_fit': ( 'audio.mixup.html#audiocutmixupaugment.after_cancel_fit',
                                                                                                        'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMixUpAugment.before_batch': ( 'audio.mixup.html#audiocutmixupaugment.before_batch',
                                                                                                    'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMixUpAugment.before_fit': ( 'audio.mixup.html#audiocutmixupaugment.before_fit',
                                                                                                  'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMixUpAugment.multi_lf': ( 'audio.mixup.html#audiocutmixupaugment.multi_lf',
                                                                                                'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMixUpAugment.solo_lf': ( 'audio.mixup.html#audiocutmixupaugment.solo_lf',
                                                                                               'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioMixHandler': ( 'audio.mixup.html#audiomixhandler',
                                                                                  'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioMixHandler.__init__': ( 'audio.mixup.html#audiomixhandler.__init__',
                                                                                           'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioMixHandler.after_cancel_fit': ( 'audio.mixup.html#audiomixhandler.after_cancel_fit',
                                                                                                   'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioMixHandler.after_fit': ( 'audio.mixup.html#audiomixhandler.after_fit',
                                                                                            'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioMixHandler.before_fit': ( 'audio.mixup.html#audiomixhandler.before_fit',
                                                                                             'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioMixUp': ('audio.mixup.html#audiomixup', 'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioMixUp.__init__': ( 'audio.mixup.html#audiomixup.__init__',
                                                                                      'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioMixUp.before_batch': ( 'audio.mixup.html#audiomixup.before_batch',
                                                                                          'fastxtend/audio/mixup.py')},
            'fastxtend.basics': { 'fastxtend.basics.is_listish': ('basics.html#is_listish', 'fastxtend/basics.py'),
                                  'fastxtend.basics.listify_store_attr': ('basics.html#listify_store_attr', 'fastxtend/basics.py'),
                                  'fastxtend.basics.show_batch': ('basics.html#show_batch', 'fastxtend/basics.py')},
            'fastxtend.callback.all': {},
            'fastxtend.callback.channelslast': { 'fastxtend.callback.channelslast.ChannelsLast': ( 'callback.channelslast.html#channelslast',
                                                                                                   'fastxtend/callback/channelslast.py'),
                                                 'fastxtend.callback.channelslast.ChannelsLast.before_fit': ( 'callback.channelslast.html#channelslast.before_fit',
                                                                                                              'fastxtend/callback/channelslast.py'),
                                                 'fastxtend.callback.channelslast.Learner.to_channelslast': ( 'callback.channelslast.html#learner.to_channelslast',
                                                                                                              'fastxtend/callback/channelslast.py'),
                                                 'fastxtend.callback.channelslast.Learner.to_contiguous': ( 'callback.channelslast.html#learner.to_contiguous',
                                                                                                            'fastxtend/callback/channelslast.py')},
            'fastxtend.callback.cutmixup': { 'fastxtend.callback.cutmixup.CutMix': ( 'callback.cutmixup.html#cutmix',
                                                                                     'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMix.__init__': ( 'callback.cutmixup.html#cutmix.__init__',
                                                                                              'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMix._multi_cutmix': ( 'callback.cutmixup.html#cutmix._multi_cutmix',
                                                                                                   'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMix._uniform_cutmix': ( 'callback.cutmixup.html#cutmix._uniform_cutmix',
                                                                                                     'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMix.before_batch': ( 'callback.cutmixup.html#cutmix.before_batch',
                                                                                                  'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMix.rand_bbox': ( 'callback.cutmixup.html#cutmix.rand_bbox',
                                                                                               'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMixUp': ( 'callback.cutmixup.html#cutmixup',
                                                                                       'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMixUp.__init__': ( 'callback.cutmixup.html#cutmixup.__init__',
                                                                                                'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMixUp.before_batch': ( 'callback.cutmixup.html#cutmixup.before_batch',
                                                                                                    'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMixUpAugment': ( 'callback.cutmixup.html#cutmixupaugment',
                                                                                              'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMixUpAugment.__init__': ( 'callback.cutmixup.html#cutmixupaugment.__init__',
                                                                                                       'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMixUpAugment.after_cancel_fit': ( 'callback.cutmixup.html#cutmixupaugment.after_cancel_fit',
                                                                                                               'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMixUpAugment.after_fit': ( 'callback.cutmixup.html#cutmixupaugment.after_fit',
                                                                                                        'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMixUpAugment.before_batch': ( 'callback.cutmixup.html#cutmixupaugment.before_batch',
                                                                                                           'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMixUpAugment.before_fit': ( 'callback.cutmixup.html#cutmixupaugment.before_fit',
                                                                                                         'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMixUpAugment.multi_lf': ( 'callback.cutmixup.html#cutmixupaugment.multi_lf',
                                                                                                       'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMixUpAugment.solo_lf': ( 'callback.cutmixup.html#cutmixupaugment.solo_lf',
                                                                                                      'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.MixUp': ( 'callback.cutmixup.html#mixup',
                                                                                    'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.MixUp.__init__': ( 'callback.cutmixup.html#mixup.__init__',
                                                                                             'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.MixUp._mixup': ( 'callback.cutmixup.html#mixup._mixup',
                                                                                           'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.MixUp.before_batch': ( 'callback.cutmixup.html#mixup.before_batch',
                                                                                                 'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup._do_cutmixaug': ( 'callback.cutmixup.html#_do_cutmixaug',
                                                                                            'fastxtend/callback/cutmixup.py')},
            'fastxtend.callback.ema': { 'fastxtend.callback.ema.EMACallback': ( 'callback.ema.html#emacallback',
                                                                                'fastxtend/callback/ema.py'),
                                        'fastxtend.callback.ema.EMACallback.__init__': ( 'callback.ema.html#emacallback.__init__',
                                                                                         'fastxtend/callback/ema.py'),
                                        'fastxtend.callback.ema.EMACallback.after_batch': ( 'callback.ema.html#emacallback.after_batch',
                                                                                            'fastxtend/callback/ema.py'),
                                        'fastxtend.callback.ema.EMACallback.after_fit': ( 'callback.ema.html#emacallback.after_fit',
                                                                                          'fastxtend/callback/ema.py'),
                                        'fastxtend.callback.ema.EMACallback.after_validate': ( 'callback.ema.html#emacallback.after_validate',
                                                                                               'fastxtend/callback/ema.py'),
                                        'fastxtend.callback.ema.EMACallback.before_fit': ( 'callback.ema.html#emacallback.before_fit',
                                                                                           'fastxtend/callback/ema.py'),
                                        'fastxtend.callback.ema.EMACallback.before_validate': ( 'callback.ema.html#emacallback.before_validate',
                                                                                                'fastxtend/callback/ema.py')},
            'fastxtend.callback.lr_finder': { 'fastxtend.callback.lr_finder.LRFinder': ( 'callback.lr_finder.html#lrfinder',
                                                                                         'fastxtend/callback/lr_finder.py'),
                                              'fastxtend.callback.lr_finder.LRFinder.__init__': ( 'callback.lr_finder.html#lrfinder.__init__',
                                                                                                  'fastxtend/callback/lr_finder.py'),
                                              'fastxtend.callback.lr_finder.LRFinder.after_batch': ( 'callback.lr_finder.html#lrfinder.after_batch',
                                                                                                     'fastxtend/callback/lr_finder.py'),
                                              'fastxtend.callback.lr_finder.LRFinder.after_fit': ( 'callback.lr_finder.html#lrfinder.after_fit',
                                                                                                   'fastxtend/callback/lr_finder.py'),
                                              'fastxtend.callback.lr_finder.LRFinder.before_batch': ( 'callback.lr_finder.html#lrfinder.before_batch',
                                                                                                      'fastxtend/callback/lr_finder.py'),
                                              'fastxtend.callback.lr_finder.LRFinder.before_fit': ( 'callback.lr_finder.html#lrfinder.before_fit',
                                                                                                    'fastxtend/callback/lr_finder.py'),
                                              'fastxtend.callback.lr_finder.LRFinder.before_validate': ( 'callback.lr_finder.html#lrfinder.before_validate',
                                                                                                         'fastxtend/callback/lr_finder.py'),
                                              'fastxtend.callback.lr_finder.Learner.lr_find': ( 'callback.lr_finder.html#learner.lr_find',
                                                                                                'fastxtend/callback/lr_finder.py')},
            'fastxtend.callback.progresize': { 'fastxtend.callback.progresize.IncreaseMode': ( 'callback.progresize.html#increasemode',
                                                                                               'fastxtend/callback/progresize.py'),
                                               'fastxtend.callback.progresize.ProgressiveResize': ( 'callback.progresize.html#progressiveresize',
                                                                                                    'fastxtend/callback/progresize.py'),
                                               'fastxtend.callback.progresize.ProgressiveResize.__init__': ( 'callback.progresize.html#progressiveresize.__init__',
                                                                                                             'fastxtend/callback/progresize.py'),
                                               'fastxtend.callback.progresize.ProgressiveResize._increase_size': ( 'callback.progresize.html#progressiveresize._increase_size',
                                                                                                                   'fastxtend/callback/progresize.py'),
                                               'fastxtend.callback.progresize.ProgressiveResize._process_pipeline': ( 'callback.progresize.html#progressiveresize._process_pipeline',
                                                                                                                      'fastxtend/callback/progresize.py'),
                                               'fastxtend.callback.progresize.ProgressiveResize.after_epoch': ( 'callback.progresize.html#progressiveresize.after_epoch',
                                                                                                                'fastxtend/callback/progresize.py'),
                                               'fastxtend.callback.progresize.ProgressiveResize.before_batch': ( 'callback.progresize.html#progressiveresize.before_batch',
                                                                                                                 'fastxtend/callback/progresize.py'),
                                               'fastxtend.callback.progresize.ProgressiveResize.before_fit': ( 'callback.progresize.html#progressiveresize.before_fit',
                                                                                                               'fastxtend/callback/progresize.py'),
                                               'fastxtend.callback.progresize.ProgressiveResize.before_train': ( 'callback.progresize.html#progressiveresize.before_train',
                                                                                                                 'fastxtend/callback/progresize.py'),
                                               'fastxtend.callback.progresize._evenly_divisible': ( 'callback.progresize.html#_evenly_divisible',
                                                                                                    'fastxtend/callback/progresize.py'),
                                               'fastxtend.callback.progresize._num_steps': ( 'callback.progresize.html#_num_steps',
                                                                                             'fastxtend/callback/progresize.py'),
                                               'fastxtend.callback.progresize._to_size': ( 'callback.progresize.html#_to_size',
                                                                                           'fastxtend/callback/progresize.py')},
            'fastxtend.callback.simpleprofiler': { 'fastxtend.callback.simpleprofiler.Callback.__call__': ( 'callback.simpleprofiler.html#callback.__call__',
                                                                                                            'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.Learner._call_one': ( 'callback.simpleprofiler.html#learner._call_one',
                                                                                                            'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.Learner.all_batches': ( 'callback.simpleprofiler.html#learner.all_batches',
                                                                                                              'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.Learner.profile': ( 'callback.simpleprofiler.html#learner.profile',
                                                                                                          'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.Learner.show_training_loop': ( 'callback.simpleprofiler.html#learner.show_training_loop',
                                                                                                                     'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerCallback': ( 'callback.simpleprofiler.html#simpleprofilercallback',
                                                                                                                 'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerCallback.__init__': ( 'callback.simpleprofiler.html#simpleprofilercallback.__init__',
                                                                                                                          'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerCallback._append_to_df': ( 'callback.simpleprofiler.html#simpleprofilercallback._append_to_df',
                                                                                                                               'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerCallback._calc_percent': ( 'callback.simpleprofiler.html#simpleprofilercallback._calc_percent',
                                                                                                                               'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerCallback._create_detail_row': ( 'callback.simpleprofiler.html#simpleprofilercallback._create_detail_row',
                                                                                                                                    'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerCallback._create_overview_row': ( 'callback.simpleprofiler.html#simpleprofilercallback._create_overview_row',
                                                                                                                                      'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerCallback._display_report': ( 'callback.simpleprofiler.html#simpleprofilercallback._display_report',
                                                                                                                                 'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerCallback._generate_report': ( 'callback.simpleprofiler.html#simpleprofilercallback._generate_report',
                                                                                                                                  'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerCallback._train_samples_per_second': ( 'callback.simpleprofiler.html#simpleprofilercallback._train_samples_per_second',
                                                                                                                                           'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerCallback.after_batch': ( 'callback.simpleprofiler.html#simpleprofilercallback.after_batch',
                                                                                                                             'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerCallback.before_backward': ( 'callback.simpleprofiler.html#simpleprofilercallback.before_backward',
                                                                                                                                 'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerCallback.before_batch': ( 'callback.simpleprofiler.html#simpleprofilercallback.before_batch',
                                                                                                                              'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerCallback.before_draw': ( 'callback.simpleprofiler.html#simpleprofilercallback.before_draw',
                                                                                                                             'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerCallback.before_epoch': ( 'callback.simpleprofiler.html#simpleprofilercallback.before_epoch',
                                                                                                                              'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerCallback.before_fit': ( 'callback.simpleprofiler.html#simpleprofilercallback.before_fit',
                                                                                                                            'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerCallback.before_step': ( 'callback.simpleprofiler.html#simpleprofilercallback.before_step',
                                                                                                                             'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerCallback.before_train': ( 'callback.simpleprofiler.html#simpleprofilercallback.before_train',
                                                                                                                              'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerCallback.before_validate': ( 'callback.simpleprofiler.html#simpleprofilercallback.before_validate',
                                                                                                                                 'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerPostCallback': ( 'callback.simpleprofiler.html#simpleprofilerpostcallback',
                                                                                                                     'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerPostCallback.__init__': ( 'callback.simpleprofiler.html#simpleprofilerpostcallback.__init__',
                                                                                                                              'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerPostCallback.after_batch': ( 'callback.simpleprofiler.html#simpleprofilerpostcallback.after_batch',
                                                                                                                                 'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerPostCallback.after_epoch': ( 'callback.simpleprofiler.html#simpleprofilerpostcallback.after_epoch',
                                                                                                                                 'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerPostCallback.after_fit': ( 'callback.simpleprofiler.html#simpleprofilerpostcallback.after_fit',
                                                                                                                               'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerPostCallback.after_loss': ( 'callback.simpleprofiler.html#simpleprofilerpostcallback.after_loss',
                                                                                                                                'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerPostCallback.after_pred': ( 'callback.simpleprofiler.html#simpleprofilerpostcallback.after_pred',
                                                                                                                                'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerPostCallback.after_step': ( 'callback.simpleprofiler.html#simpleprofilerpostcallback.after_step',
                                                                                                                                'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerPostCallback.after_train': ( 'callback.simpleprofiler.html#simpleprofilerpostcallback.after_train',
                                                                                                                                 'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerPostCallback.after_validate': ( 'callback.simpleprofiler.html#simpleprofilerpostcallback.after_validate',
                                                                                                                                    'fastxtend/callback/simpleprofiler.py'),
                                                   'fastxtend.callback.simpleprofiler.SimpleProfilerPostCallback.before_fit': ( 'callback.simpleprofiler.html#simpleprofilerpostcallback.before_fit',
                                                                                                                                'fastxtend/callback/simpleprofiler.py')},
            'fastxtend.callback.tracker': { 'fastxtend.callback.tracker.SaveModelAtEnd': ( 'callback.tracker.html#savemodelatend',
                                                                                           'fastxtend/callback/tracker.py'),
                                            'fastxtend.callback.tracker.SaveModelAtEnd.__init__': ( 'callback.tracker.html#savemodelatend.__init__',
                                                                                                    'fastxtend/callback/tracker.py'),
                                            'fastxtend.callback.tracker.SaveModelAtEnd.after_epoch': ( 'callback.tracker.html#savemodelatend.after_epoch',
                                                                                                       'fastxtend/callback/tracker.py'),
                                            'fastxtend.callback.tracker.SaveModelAtEnd.after_fit': ( 'callback.tracker.html#savemodelatend.after_fit',
                                                                                                     'fastxtend/callback/tracker.py'),
                                            'fastxtend.callback.tracker.SaveModelAtEnd.before_fit': ( 'callback.tracker.html#savemodelatend.before_fit',
                                                                                                      'fastxtend/callback/tracker.py'),
                                            'fastxtend.callback.tracker.TerminateOnTrainNaN': ( 'callback.tracker.html#terminateontrainnan',
                                                                                                'fastxtend/callback/tracker.py'),
                                            'fastxtend.callback.tracker.TerminateOnTrainNaN.after_batch': ( 'callback.tracker.html#terminateontrainnan.after_batch',
                                                                                                            'fastxtend/callback/tracker.py')},
            'fastxtend.data.all': {},
            'fastxtend.data.transforms': { 'fastxtend.data.transforms.GreatGrandparentSplitter': ( 'data.transforms.html#greatgrandparentsplitter',
                                                                                                   'fastxtend/data/transforms.py'),
                                           'fastxtend.data.transforms.KFoldColSplitter': ( 'data.transforms.html#kfoldcolsplitter',
                                                                                           'fastxtend/data/transforms.py'),
                                           'fastxtend.data.transforms.ParentSplitter': ( 'data.transforms.html#parentsplitter',
                                                                                         'fastxtend/data/transforms.py'),
                                           'fastxtend.data.transforms._greatgrandparent_idxs': ( 'data.transforms.html#_greatgrandparent_idxs',
                                                                                                 'fastxtend/data/transforms.py'),
                                           'fastxtend.data.transforms._parent_idxs': ( 'data.transforms.html#_parent_idxs',
                                                                                       'fastxtend/data/transforms.py')},
            'fastxtend.imports': {},
            'fastxtend.losses': { 'fastxtend.losses.BCEWithLogitsLoss': ('losses.html#bcewithlogitsloss', 'fastxtend/losses.py'),
                                  'fastxtend.losses.BCEWithLogitsLoss.__init__': ( 'losses.html#bcewithlogitsloss.__init__',
                                                                                   'fastxtend/losses.py'),
                                  'fastxtend.losses.BCEWithLogitsLoss.activation': ( 'losses.html#bcewithlogitsloss.activation',
                                                                                     'fastxtend/losses.py'),
                                  'fastxtend.losses.BCEWithLogitsLoss.decodes': ( 'losses.html#bcewithlogitsloss.decodes',
                                                                                  'fastxtend/losses.py'),
                                  'fastxtend.losses.BCEWithLogitsLoss.forward': ( 'losses.html#bcewithlogitsloss.forward',
                                                                                  'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalanced': ('losses.html#classbalanced', 'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalanced.__init__': ('losses.html#classbalanced.__init__', 'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalanced.to': ('losses.html#classbalanced.to', 'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalancedBCEWithLogitsLoss': ( 'losses.html#classbalancedbcewithlogitsloss',
                                                                                       'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalancedBCEWithLogitsLoss.__init__': ( 'losses.html#classbalancedbcewithlogitsloss.__init__',
                                                                                                'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalancedBCEWithLogitsLoss.activation': ( 'losses.html#classbalancedbcewithlogitsloss.activation',
                                                                                                  'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalancedBCEWithLogitsLoss.decodes': ( 'losses.html#classbalancedbcewithlogitsloss.decodes',
                                                                                               'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalancedBCEWithLogitsLoss.forward': ( 'losses.html#classbalancedbcewithlogitsloss.forward',
                                                                                               'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalancedCrossEntropyLoss': ( 'losses.html#classbalancedcrossentropyloss',
                                                                                      'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalancedCrossEntropyLoss.__init__': ( 'losses.html#classbalancedcrossentropyloss.__init__',
                                                                                               'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalancedCrossEntropyLoss.activation': ( 'losses.html#classbalancedcrossentropyloss.activation',
                                                                                                 'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalancedCrossEntropyLoss.decodes': ( 'losses.html#classbalancedcrossentropyloss.decodes',
                                                                                              'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalancedCrossEntropyLoss.forward': ( 'losses.html#classbalancedcrossentropyloss.forward',
                                                                                              'fastxtend/losses.py')},
            'fastxtend.metrics': { 'fastxtend.metrics.APScoreBinary': ('metrics.html#apscorebinary', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.APScoreMulti': ('metrics.html#apscoremulti', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AccumMetricX': ('metrics.html#accummetricx', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AccumMetricX.__call__': ( 'metrics.html#accummetricx.__call__',
                                                                                'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AccumMetricX.__init__': ( 'metrics.html#accummetricx.__init__',
                                                                                'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AccumMetricX.accum_values': ( 'metrics.html#accummetricx.accum_values',
                                                                                    'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AccumMetricX.accumulate': ( 'metrics.html#accummetricx.accumulate',
                                                                                  'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AccumMetricX.reset': ('metrics.html#accummetricx.reset', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AccumMetricX.value': ('metrics.html#accummetricx.value', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Accuracy': ('metrics.html#accuracy', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AccuracyMulti': ('metrics.html#accuracymulti', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.ActivationType': ('metrics.html#activationtype', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgLossX': ('metrics.html#avglossx', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgLossX.accumulate': ('metrics.html#avglossx.accumulate', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgLossX.reset': ('metrics.html#avglossx.reset', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgLossX.value': ('metrics.html#avglossx.value', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgMetricX': ('metrics.html#avgmetricx', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgMetricX.__init__': ('metrics.html#avgmetricx.__init__', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgMetricX.accumulate': ( 'metrics.html#avgmetricx.accumulate',
                                                                                'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgMetricX.reset': ('metrics.html#avgmetricx.reset', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgMetricX.value': ('metrics.html#avgmetricx.value', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgSmoothLossX': ('metrics.html#avgsmoothlossx', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgSmoothLossX.__init__': ( 'metrics.html#avgsmoothlossx.__init__',
                                                                                  'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgSmoothLossX.accumulate': ( 'metrics.html#avgsmoothlossx.accumulate',
                                                                                    'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgSmoothLossX.reset': ('metrics.html#avgsmoothlossx.reset', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgSmoothLossX.value': ('metrics.html#avgsmoothlossx.value', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgSmoothMetricX': ('metrics.html#avgsmoothmetricx', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgSmoothMetricX.__init__': ( 'metrics.html#avgsmoothmetricx.__init__',
                                                                                    'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgSmoothMetricX.accumulate': ( 'metrics.html#avgsmoothmetricx.accumulate',
                                                                                      'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgSmoothMetricX.reset': ( 'metrics.html#avgsmoothmetricx.reset',
                                                                                 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgSmoothMetricX.value': ( 'metrics.html#avgsmoothmetricx.value',
                                                                                 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.BalancedAccuracy': ('metrics.html#balancedaccuracy', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.BrierScore': ('metrics.html#brierscore', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.BrierScoreMulti': ('metrics.html#brierscoremulti', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.CohenKappa': ('metrics.html#cohenkappa', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.CorpusBLEUMetric': ('metrics.html#corpusbleumetric', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.CorpusBLEUMetric.NGram': ( 'metrics.html#corpusbleumetric.ngram',
                                                                                 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.CorpusBLEUMetric.__init__': ( 'metrics.html#corpusbleumetric.__init__',
                                                                                    'fastxtend/metrics.py'),
                                   'fastxtend.metrics.CorpusBLEUMetric.accumulate': ( 'metrics.html#corpusbleumetric.accumulate',
                                                                                      'fastxtend/metrics.py'),
                                   'fastxtend.metrics.CorpusBLEUMetric.get_correct_ngrams': ( 'metrics.html#corpusbleumetric.get_correct_ngrams',
                                                                                              'fastxtend/metrics.py'),
                                   'fastxtend.metrics.CorpusBLEUMetric.get_grams': ( 'metrics.html#corpusbleumetric.get_grams',
                                                                                     'fastxtend/metrics.py'),
                                   'fastxtend.metrics.CorpusBLEUMetric.reset': ( 'metrics.html#corpusbleumetric.reset',
                                                                                 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.CorpusBLEUMetric.value': ( 'metrics.html#corpusbleumetric.value',
                                                                                 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Dice': ('metrics.html#dice', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Dice.__init__': ('metrics.html#dice.__init__', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Dice.accumulate': ('metrics.html#dice.accumulate', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Dice.reset': ('metrics.html#dice.reset', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Dice.value': ('metrics.html#dice.value', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.DiceMulti': ('metrics.html#dicemulti', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.DiceMulti.__init__': ('metrics.html#dicemulti.__init__', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.DiceMulti.accumulate': ('metrics.html#dicemulti.accumulate', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.DiceMulti.reset': ('metrics.html#dicemulti.reset', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.DiceMulti.value': ('metrics.html#dicemulti.value', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.ErrorRate': ('metrics.html#errorrate', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.ExpRMSE': ('metrics.html#exprmse', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.ExplainedVariance': ('metrics.html#explainedvariance', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.F1Score': ('metrics.html#f1score', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.F1ScoreMulti': ('metrics.html#f1scoremulti', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.FBeta': ('metrics.html#fbeta', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.FBetaMulti': ('metrics.html#fbetamulti', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.ForegroundAcc': ('metrics.html#foregroundacc', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.HammingLoss': ('metrics.html#hammingloss', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.HammingLossMulti': ('metrics.html#hamminglossmulti', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Jaccard': ('metrics.html#jaccard', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.JaccardCoeff': ('metrics.html#jaccardcoeff', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.JaccardCoeff.value': ('metrics.html#jaccardcoeff.value', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.JaccardMulti': ('metrics.html#jaccardmulti', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.LogMetric': ('metrics.html#logmetric', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.LossMetric': ('metrics.html#lossmetric', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.LossMetric.__init__': ('metrics.html#lossmetric.__init__', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.LossMetric.accumulate': ( 'metrics.html#lossmetric.accumulate',
                                                                                'fastxtend/metrics.py'),
                                   'fastxtend.metrics.LossMetric.name': ('metrics.html#lossmetric.name', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.LossMetrics': ('metrics.html#lossmetrics', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MAE': ('metrics.html#mae', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MSE': ('metrics.html#mse', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MSLE': ('metrics.html#msle', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MatthewsCorrCoef': ('metrics.html#matthewscorrcoef', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MatthewsCorrCoefMulti': ( 'metrics.html#matthewscorrcoefmulti',
                                                                                'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MetricType': ('metrics.html#metrictype', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MetricX': ('metrics.html#metricx', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MetricX.__init__': ('metrics.html#metricx.__init__', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MetricX._split_kwargs': ( 'metrics.html#metricx._split_kwargs',
                                                                                'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MetricX.accumulate': ('metrics.html#metricx.accumulate', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MetricX.name': ('metrics.html#metricx.name', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MetricX.reset': ('metrics.html#metricx.reset', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MetricX.value': ('metrics.html#metricx.value', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.PearsonCorrCoef': ('metrics.html#pearsoncorrcoef', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Perplexity': ('metrics.html#perplexity', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Perplexity.name': ('metrics.html#perplexity.name', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Perplexity.value': ('metrics.html#perplexity.value', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Precision': ('metrics.html#precision', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.PrecisionMulti': ('metrics.html#precisionmulti', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.R2Score': ('metrics.html#r2score', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.RMSE': ('metrics.html#rmse', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Recall': ('metrics.html#recall', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.RecallMulti': ('metrics.html#recallmulti', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Recorder.__init__': ('metrics.html#recorder.__init__', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Recorder.after_batch': ('metrics.html#recorder.after_batch', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Recorder.after_epoch': ('metrics.html#recorder.after_epoch', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Recorder.after_train': ('metrics.html#recorder.after_train', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Recorder.after_validate': ( 'metrics.html#recorder.after_validate',
                                                                                  'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Recorder.before_epoch': ( 'metrics.html#recorder.before_epoch',
                                                                                'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Recorder.before_fit': ('metrics.html#recorder.before_fit', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Recorder.before_train': ( 'metrics.html#recorder.before_train',
                                                                                'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Recorder.before_validate': ( 'metrics.html#recorder.before_validate',
                                                                                   'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Recorder.train_mets': ('metrics.html#recorder.train_mets', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Recorder.valid_mets': ('metrics.html#recorder.valid_mets', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.RocAuc': ('metrics.html#rocauc', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.RocAucBinary': ('metrics.html#rocaucbinary', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.RocAucMulti': ('metrics.html#rocaucmulti', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.SpearmanCorrCoef': ('metrics.html#spearmancorrcoef', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.TopKAccuracy': ('metrics.html#topkaccuracy', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.ValueMetricX': ('metrics.html#valuemetricx', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.ValueMetricX.__init__': ( 'metrics.html#valuemetricx.__init__',
                                                                                'fastxtend/metrics.py'),
                                   'fastxtend.metrics.ValueMetricX.value': ('metrics.html#valuemetricx.value', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics._dedup_metric_names': ('metrics.html#_dedup_metric_names', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.accuracy': ('metrics.html#accuracy', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.accuracy_multi': ('metrics.html#accuracy_multi', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.error_rate': ('metrics.html#error_rate', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.exp_rmspe': ('metrics.html#exp_rmspe', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.foreground_acc': ('metrics.html#foreground_acc', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.func_to_metric': ('metrics.html#func_to_metric', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.mae': ('metrics.html#mae', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.mse': ('metrics.html#mse', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.msle': ('metrics.html#msle', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.rmse': ('metrics.html#rmse', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.skm_to_fastxtend': ('metrics.html#skm_to_fastxtend', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.top_k_accuracy': ('metrics.html#top_k_accuracy', 'fastxtend/metrics.py')},
            'fastxtend.multiloss': { 'fastxtend.multiloss.MixHandlerX': ('multiloss.html#mixhandlerx', 'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MixHandlerX.__init__': ( 'multiloss.html#mixhandlerx.__init__',
                                                                                   'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MixHandlerX.after_cancel_fit': ( 'multiloss.html#mixhandlerx.after_cancel_fit',
                                                                                           'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MixHandlerX.after_cancel_train': ( 'multiloss.html#mixhandlerx.after_cancel_train',
                                                                                             'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MixHandlerX.after_train': ( 'multiloss.html#mixhandlerx.after_train',
                                                                                      'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MixHandlerX.before_fit': ( 'multiloss.html#mixhandlerx.before_fit',
                                                                                     'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MixHandlerX.before_train': ( 'multiloss.html#mixhandlerx.before_train',
                                                                                       'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MixHandlerX.multi_lf': ( 'multiloss.html#mixhandlerx.multi_lf',
                                                                                   'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MixHandlerX.solo_lf': ( 'multiloss.html#mixhandlerx.solo_lf',
                                                                                  'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiAvgLoss': ('multiloss.html#multiavgloss', 'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiAvgLoss.__init__': ( 'multiloss.html#multiavgloss.__init__',
                                                                                    'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiAvgLoss.accumulate': ( 'multiloss.html#multiavgloss.accumulate',
                                                                                      'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiAvgSmoothLoss': ( 'multiloss.html#multiavgsmoothloss',
                                                                                 'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiAvgSmoothLoss.__init__': ( 'multiloss.html#multiavgsmoothloss.__init__',
                                                                                          'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiAvgSmoothLoss.accumulate': ( 'multiloss.html#multiavgsmoothloss.accumulate',
                                                                                            'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiAvgSmoothLossMixup': ( 'multiloss.html#multiavgsmoothlossmixup',
                                                                                      'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiAvgSmoothLossMixup.__init__': ( 'multiloss.html#multiavgsmoothlossmixup.__init__',
                                                                                               'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiAvgSmoothLossMixup.accumulate': ( 'multiloss.html#multiavgsmoothlossmixup.accumulate',
                                                                                                 'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiLoss': ('multiloss.html#multiloss', 'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiLoss.__init__': ( 'multiloss.html#multiloss.__init__',
                                                                                 'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiLoss.activation': ( 'multiloss.html#multiloss.activation',
                                                                                   'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiLoss.decodes': ( 'multiloss.html#multiloss.decodes',
                                                                                'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiLoss.forward': ( 'multiloss.html#multiloss.forward',
                                                                                'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiLoss.forward_mixup': ( 'multiloss.html#multiloss.forward_mixup',
                                                                                      'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiLoss.losses': ('multiloss.html#multiloss.losses', 'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiLoss.reduction': ( 'multiloss.html#multiloss.reduction',
                                                                                  'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiLoss.to': ('multiloss.html#multiloss.to', 'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiLossCallback': ( 'multiloss.html#multilosscallback',
                                                                                'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiLossCallback.__init__': ( 'multiloss.html#multilosscallback.__init__',
                                                                                         'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiLossCallback.before_fit': ( 'multiloss.html#multilosscallback.before_fit',
                                                                                           'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiTargetLoss': ('multiloss.html#multitargetloss', 'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiTargetLoss.__init__': ( 'multiloss.html#multitargetloss.__init__',
                                                                                       'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiTargetLoss.activation': ( 'multiloss.html#multitargetloss.activation',
                                                                                         'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiTargetLoss.decodes': ( 'multiloss.html#multitargetloss.decodes',
                                                                                      'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiTargetLoss.forward': ( 'multiloss.html#multitargetloss.forward',
                                                                                      'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiTargetLoss.forward_mixup': ( 'multiloss.html#multitargetloss.forward_mixup',
                                                                                            'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.init_loss': ('multiloss.html#init_loss', 'fastxtend/multiloss.py')},
            'fastxtend.optimizer.adan': { 'fastxtend.optimizer.adan.Adan': ('optimizer.adan.html#adan', 'fastxtend/optimizer/adan.py'),
                                          'fastxtend.optimizer.adan.AdanForEachOptimizer': ( 'optimizer.adan.html#adanforeachoptimizer',
                                                                                             'fastxtend/optimizer/adan.py'),
                                          'fastxtend.optimizer.adan.AdanForEachOptimizer.__init__': ( 'optimizer.adan.html#adanforeachoptimizer.__init__',
                                                                                                      'fastxtend/optimizer/adan.py'),
                                          'fastxtend.optimizer.adan.AdanForEachOptimizer.step': ( 'optimizer.adan.html#adanforeachoptimizer.step',
                                                                                                  'fastxtend/optimizer/adan.py'),
                                          'fastxtend.optimizer.adan.AdanLargeBatchLR': ( 'optimizer.adan.html#adanlargebatchlr',
                                                                                         'fastxtend/optimizer/adan.py'),
                                          'fastxtend.optimizer.adan.adan': ('optimizer.adan.html#adan', 'fastxtend/optimizer/adan.py'),
                                          'fastxtend.optimizer.adan.adan_foreach_step': ( 'optimizer.adan.html#adan_foreach_step',
                                                                                          'fastxtend/optimizer/adan.py'),
                                          'fastxtend.optimizer.adan.adan_jit_step': ( 'optimizer.adan.html#adan_jit_step',
                                                                                      'fastxtend/optimizer/adan.py'),
                                          'fastxtend.optimizer.adan.adan_setup': ( 'optimizer.adan.html#adan_setup',
                                                                                   'fastxtend/optimizer/adan.py'),
                                          'fastxtend.optimizer.adan.adan_step': ( 'optimizer.adan.html#adan_step',
                                                                                  'fastxtend/optimizer/adan.py'),
                                          'fastxtend.optimizer.adan.debias': ('optimizer.adan.html#debias', 'fastxtend/optimizer/adan.py')},
            'fastxtend.optimizer.all': {},
            'fastxtend.optimizer.finetune': { 'fastxtend.optimizer.finetune.AdamFT': ( 'optimizer.finetune.html#adamft',
                                                                                       'fastxtend/optimizer/finetune.py'),
                                              'fastxtend.optimizer.finetune.FineTuneOpt': ( 'optimizer.finetune.html#finetuneopt',
                                                                                            'fastxtend/optimizer/finetune.py'),
                                              'fastxtend.optimizer.finetune.FineTuneOpt.__init__': ( 'optimizer.finetune.html#finetuneopt.__init__',
                                                                                                     'fastxtend/optimizer/finetune.py'),
                                              'fastxtend.optimizer.finetune.FineTuneOpt.clear_state': ( 'optimizer.finetune.html#finetuneopt.clear_state',
                                                                                                        'fastxtend/optimizer/finetune.py'),
                                              'fastxtend.optimizer.finetune.FineTuneOpt.load_state_dict': ( 'optimizer.finetune.html#finetuneopt.load_state_dict',
                                                                                                            'fastxtend/optimizer/finetune.py'),
                                              'fastxtend.optimizer.finetune.FineTuneOpt.state_dict': ( 'optimizer.finetune.html#finetuneopt.state_dict',
                                                                                                       'fastxtend/optimizer/finetune.py'),
                                              'fastxtend.optimizer.finetune.FineTuneOpt.step': ( 'optimizer.finetune.html#finetuneopt.step',
                                                                                                 'fastxtend/optimizer/finetune.py'),
                                              'fastxtend.optimizer.finetune.LambFT': ( 'optimizer.finetune.html#lambft',
                                                                                       'fastxtend/optimizer/finetune.py'),
                                              'fastxtend.optimizer.finetune.LarcFT': ( 'optimizer.finetune.html#larcft',
                                                                                       'fastxtend/optimizer/finetune.py'),
                                              'fastxtend.optimizer.finetune.LookaheadFT': ( 'optimizer.finetune.html#lookaheadft',
                                                                                            'fastxtend/optimizer/finetune.py'),
                                              'fastxtend.optimizer.finetune.LookaheadFT.__init__': ( 'optimizer.finetune.html#lookaheadft.__init__',
                                                                                                     'fastxtend/optimizer/finetune.py'),
                                              'fastxtend.optimizer.finetune.LookaheadFT._copy_weights': ( 'optimizer.finetune.html#lookaheadft._copy_weights',
                                                                                                          'fastxtend/optimizer/finetune.py'),
                                              'fastxtend.optimizer.finetune.LookaheadFT._init_state': ( 'optimizer.finetune.html#lookaheadft._init_state',
                                                                                                        'fastxtend/optimizer/finetune.py'),
                                              'fastxtend.optimizer.finetune.LookaheadFT.clear_state': ( 'optimizer.finetune.html#lookaheadft.clear_state',
                                                                                                        'fastxtend/optimizer/finetune.py'),
                                              'fastxtend.optimizer.finetune.LookaheadFT.load_state_dict': ( 'optimizer.finetune.html#lookaheadft.load_state_dict',
                                                                                                            'fastxtend/optimizer/finetune.py'),
                                              'fastxtend.optimizer.finetune.LookaheadFT.param_lists': ( 'optimizer.finetune.html#lookaheadft.param_lists',
                                                                                                        'fastxtend/optimizer/finetune.py'),
                                              'fastxtend.optimizer.finetune.LookaheadFT.state_dict': ( 'optimizer.finetune.html#lookaheadft.state_dict',
                                                                                                       'fastxtend/optimizer/finetune.py'),
                                              'fastxtend.optimizer.finetune.LookaheadFT.step': ( 'optimizer.finetune.html#lookaheadft.step',
                                                                                                 'fastxtend/optimizer/finetune.py'),
                                              'fastxtend.optimizer.finetune.QHAdamFT': ( 'optimizer.finetune.html#qhadamft',
                                                                                         'fastxtend/optimizer/finetune.py'),
                                              'fastxtend.optimizer.finetune.RAdamFT': ( 'optimizer.finetune.html#radamft',
                                                                                        'fastxtend/optimizer/finetune.py'),
                                              'fastxtend.optimizer.finetune.RMSPropFT': ( 'optimizer.finetune.html#rmspropft',
                                                                                          'fastxtend/optimizer/finetune.py'),
                                              'fastxtend.optimizer.finetune.SGDFT': ( 'optimizer.finetune.html#sgdft',
                                                                                      'fastxtend/optimizer/finetune.py'),
                                              'fastxtend.optimizer.finetune.fine_tune_wd': ( 'optimizer.finetune.html#fine_tune_wd',
                                                                                             'fastxtend/optimizer/finetune.py'),
                                              'fastxtend.optimizer.finetune.rangerFT': ( 'optimizer.finetune.html#rangerft',
                                                                                         'fastxtend/optimizer/finetune.py')},
            'fastxtend.optimizer.foreach': { 'fastxtend.optimizer.foreach.AdamForEachOptimizer': ( 'optimizer.foreach.html#adamforeachoptimizer',
                                                                                                   'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.AdamForEachOptimizer.step': ( 'optimizer.foreach.html#adamforeachoptimizer.step',
                                                                                                        'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.ForEachOptimizer': ( 'optimizer.foreach.html#foreachoptimizer',
                                                                                               'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.ForEachOptimizer.__init__': ( 'optimizer.foreach.html#foreachoptimizer.__init__',
                                                                                                        'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.LambForEachOptimizer': ( 'optimizer.foreach.html#lambforeachoptimizer',
                                                                                                   'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.RAdamForEachOptimizer': ( 'optimizer.foreach.html#radamforeachoptimizer',
                                                                                                    'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.RAdamForEachOptimizer.step': ( 'optimizer.foreach.html#radamforeachoptimizer.step',
                                                                                                         'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.RangerForEachOptimizer': ( 'optimizer.foreach.html#rangerforeachoptimizer',
                                                                                                     'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.RangerForEachOptimizer.__init__': ( 'optimizer.foreach.html#rangerforeachoptimizer.__init__',
                                                                                                              'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.RangerForEachOptimizer._init_state': ( 'optimizer.foreach.html#rangerforeachoptimizer._init_state',
                                                                                                                 'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.RangerForEachOptimizer.clear_state': ( 'optimizer.foreach.html#rangerforeachoptimizer.clear_state',
                                                                                                                 'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.RangerForEachOptimizer.load_state_dict': ( 'optimizer.foreach.html#rangerforeachoptimizer.load_state_dict',
                                                                                                                     'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.RangerForEachOptimizer.state_dict': ( 'optimizer.foreach.html#rangerforeachoptimizer.state_dict',
                                                                                                                'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.RangerForEachOptimizer.step': ( 'optimizer.foreach.html#rangerforeachoptimizer.step',
                                                                                                          'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.SGDForEachOptimizer': ( 'optimizer.foreach.html#sgdforeachoptimizer',
                                                                                                  'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.SGDForEachOptimizer.step': ( 'optimizer.foreach.html#sgdforeachoptimizer.step',
                                                                                                       'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.adam_foreach_step': ( 'optimizer.foreach.html#adam_foreach_step',
                                                                                                'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.lamb_foreach_step': ( 'optimizer.foreach.html#lamb_foreach_step',
                                                                                                'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.lamb_jit_substep': ( 'optimizer.foreach.html#lamb_jit_substep',
                                                                                               'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.radam_foreach_step': ( 'optimizer.foreach.html#radam_foreach_step',
                                                                                                 'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.ranger_foreach_step': ( 'optimizer.foreach.html#ranger_foreach_step',
                                                                                                  'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.sgd_foreach_step': ( 'optimizer.foreach.html#sgd_foreach_step',
                                                                                               'fastxtend/optimizer/foreach.py')},
            'fastxtend.optimizer.fused': { 'fastxtend.optimizer.fused.Adam': ('optimizer.fused.html#adam', 'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.Lamb': ('optimizer.fused.html#lamb', 'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.Larc': ('optimizer.fused.html#larc', 'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.QHAdam': ( 'optimizer.fused.html#qhadam',
                                                                                 'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.RAdam': ( 'optimizer.fused.html#radam',
                                                                                'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.RMSProp': ( 'optimizer.fused.html#rmsprop',
                                                                                  'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.Ranger': ( 'optimizer.fused.html#ranger',
                                                                                 'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.SGD': ('optimizer.fused.html#sgd', 'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.adam': ('optimizer.fused.html#adam', 'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.lamb': ('optimizer.fused.html#lamb', 'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.larc': ('optimizer.fused.html#larc', 'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.qhadam': ( 'optimizer.fused.html#qhadam',
                                                                                 'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.radam': ( 'optimizer.fused.html#radam',
                                                                                'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.ranger': ( 'optimizer.fused.html#ranger',
                                                                                 'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.rmsprop': ( 'optimizer.fused.html#rmsprop',
                                                                                  'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.sgd': ('optimizer.fused.html#sgd', 'fastxtend/optimizer/fused.py')},
            'fastxtend.optimizer.torchscript': { 'fastxtend.optimizer.torchscript.JitLookahead': ( 'optimizer.torchscript.html#jitlookahead',
                                                                                                   'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.JitLookahead.__init__': ( 'optimizer.torchscript.html#jitlookahead.__init__',
                                                                                                            'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.JitLookahead._init_state': ( 'optimizer.torchscript.html#jitlookahead._init_state',
                                                                                                               'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.JitLookahead.clear_state': ( 'optimizer.torchscript.html#jitlookahead.clear_state',
                                                                                                               'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.JitLookahead.load_state_dict': ( 'optimizer.torchscript.html#jitlookahead.load_state_dict',
                                                                                                                   'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.JitLookahead.state_dict': ( 'optimizer.torchscript.html#jitlookahead.state_dict',
                                                                                                              'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.JitLookahead.step': ( 'optimizer.torchscript.html#jitlookahead.step',
                                                                                                        'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.JitOptimizer': ( 'optimizer.torchscript.html#jitoptimizer',
                                                                                                   'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.JitOptimizer.__init__': ( 'optimizer.torchscript.html#jitoptimizer.__init__',
                                                                                                            'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.JitOptimizer.step': ( 'optimizer.torchscript.html#jitoptimizer.step',
                                                                                                        'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript._update': ( 'optimizer.torchscript.html#_update',
                                                                                              'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.adam_jit_step': ( 'optimizer.torchscript.html#adam_jit_step',
                                                                                                    'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.lamb_jit_step': ( 'optimizer.torchscript.html#lamb_jit_step',
                                                                                                    'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.larc_jit_step': ( 'optimizer.torchscript.html#larc_jit_step',
                                                                                                    'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.qhadam_jit_step': ( 'optimizer.torchscript.html#qhadam_jit_step',
                                                                                                      'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.radam_jit_step': ( 'optimizer.torchscript.html#radam_jit_step',
                                                                                                     'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.ranger_jit_step': ( 'optimizer.torchscript.html#ranger_jit_step',
                                                                                                      'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.rmsprop_jit_step': ( 'optimizer.torchscript.html#rmsprop_jit_step',
                                                                                                       'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.sgd_jit_step': ( 'optimizer.torchscript.html#sgd_jit_step',
                                                                                                   'fastxtend/optimizer/torchscript.py')},
            'fastxtend.schedulers.fit_flat_varied': { 'fastxtend.schedulers.fit_flat_varied.Learner.fit_flat_varied': ( 'schedulers.fit_flat_varied.html#learner.fit_flat_varied',
                                                                                                                        'fastxtend/schedulers/fit_flat_varied.py')},
            'fastxtend.test_utils': {},
            'fastxtend.transform': { 'fastxtend.transform.BatchRandTransform': ( 'transform.html#batchrandtransform',
                                                                                 'fastxtend/transform.py'),
                                     'fastxtend.transform.BatchRandTransform.__call__': ( 'transform.html#batchrandtransform.__call__',
                                                                                          'fastxtend/transform.py'),
                                     'fastxtend.transform.BatchRandTransform.__init__': ( 'transform.html#batchrandtransform.__init__',
                                                                                          'fastxtend/transform.py'),
                                     'fastxtend.transform.BatchRandTransform._do_call': ( 'transform.html#batchrandtransform._do_call',
                                                                                          'fastxtend/transform.py'),
                                     'fastxtend.transform.BatchRandTransform._do_f': ( 'transform.html#batchrandtransform._do_f',
                                                                                       'fastxtend/transform.py'),
                                     'fastxtend.transform.BatchRandTransform.before_call': ( 'transform.html#batchrandtransform.before_call',
                                                                                             'fastxtend/transform.py'),
                                     'fastxtend.transform.TfmdDL._one_pass': ('transform.html#tfmddl._one_pass', 'fastxtend/transform.py'),
                                     'fastxtend.transform.TfmdDL.to': ('transform.html#tfmddl.to', 'fastxtend/transform.py')},
            'fastxtend.vision.all': {},
            'fastxtend.vision.augment.all': {},
            'fastxtend.vision.augment.batch': { 'fastxtend.vision.augment.batch.ChannelDrop': ( 'vision.augment.batch.html#channeldrop',
                                                                                                'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.ChannelDrop.__init__': ( 'vision.augment.batch.html#channeldrop.__init__',
                                                                                                         'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.ChannelDrop.encodes': ( 'vision.augment.batch.html#channeldrop.encodes',
                                                                                                        'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.GrayScale': ( 'vision.augment.batch.html#grayscale',
                                                                                              'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.GrayScale.__init__': ( 'vision.augment.batch.html#grayscale.__init__',
                                                                                                       'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.GrayScale.encodes': ( 'vision.augment.batch.html#grayscale.encodes',
                                                                                                      'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.GrayScale.to': ( 'vision.augment.batch.html#grayscale.to',
                                                                                                 'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.GrayScaleMode': ( 'vision.augment.batch.html#grayscalemode',
                                                                                                  'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.RandomErasingBatch': ( 'vision.augment.batch.html#randomerasingbatch',
                                                                                                       'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.RandomErasingBatch.__init__': ( 'vision.augment.batch.html#randomerasingbatch.__init__',
                                                                                                                'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.RandomErasingBatch._bounds': ( 'vision.augment.batch.html#randomerasingbatch._bounds',
                                                                                                               'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.RandomErasingBatch.encodes': ( 'vision.augment.batch.html#randomerasingbatch.encodes',
                                                                                                               'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.RandomNoise': ( 'vision.augment.batch.html#randomnoise',
                                                                                                'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.RandomNoise.__init__': ( 'vision.augment.batch.html#randomnoise.__init__',
                                                                                                         'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.RandomNoise.encodes': ( 'vision.augment.batch.html#randomnoise.encodes',
                                                                                                        'fastxtend/vision/augment/batch.py')},
            'fastxtend.vision.augment.itemtensor': { 'fastxtend.vision.augment.itemtensor.TensorImage._do_crop_pad': ( 'vision.augment.itemtensor.html#tensorimage._do_crop_pad',
                                                                                                                       'fastxtend/vision/augment/itemtensor.py'),
                                                     'fastxtend.vision.augment.itemtensor.TensorImage.crop_pad': ( 'vision.augment.itemtensor.html#tensorimage.crop_pad',
                                                                                                                   'fastxtend/vision/augment/itemtensor.py'),
                                                     'fastxtend.vision.augment.itemtensor.TensorImage.resize': ( 'vision.augment.itemtensor.html#tensorimage.resize',
                                                                                                                 'fastxtend/vision/augment/itemtensor.py'),
                                                     'fastxtend.vision.augment.itemtensor.TensorMask._do_crop_pad': ( 'vision.augment.itemtensor.html#tensormask._do_crop_pad',
                                                                                                                      'fastxtend/vision/augment/itemtensor.py'),
                                                     'fastxtend.vision.augment.itemtensor.TensorMask.crop_pad': ( 'vision.augment.itemtensor.html#tensormask.crop_pad',
                                                                                                                  'fastxtend/vision/augment/itemtensor.py'),
                                                     'fastxtend.vision.augment.itemtensor.TensorMask.resize': ( 'vision.augment.itemtensor.html#tensormask.resize',
                                                                                                                'fastxtend/vision/augment/itemtensor.py'),
                                                     'fastxtend.vision.augment.itemtensor._resize': ( 'vision.augment.itemtensor.html#_resize',
                                                                                                      'fastxtend/vision/augment/itemtensor.py'),
                                                     'fastxtend.vision.augment.itemtensor.encodes': ( 'vision.augment.itemtensor.html#encodes',
                                                                                                      'fastxtend/vision/augment/itemtensor.py')},
            'fastxtend.vision.data': { 'fastxtend.vision.data.ImageCPUBlock': ( 'vision.data.html#imagecpublock',
                                                                                'fastxtend/vision/data.py'),
                                       'fastxtend.vision.data.MaskCPUBlock': ('vision.data.html#maskcpublock', 'fastxtend/vision/data.py'),
                                       'fastxtend.vision.data.PostBatchAsItem': ( 'vision.data.html#postbatchasitem',
                                                                                  'fastxtend/vision/data.py'),
                                       'fastxtend.vision.data.PostBatchAsItem.decodes': ( 'vision.data.html#postbatchasitem.decodes',
                                                                                          'fastxtend/vision/data.py'),
                                       'fastxtend.vision.data.PostBatchAsItem.encodes': ( 'vision.data.html#postbatchasitem.encodes',
                                                                                          'fastxtend/vision/data.py'),
                                       'fastxtend.vision.data.PreBatchAsItem': ( 'vision.data.html#prebatchasitem',
                                                                                 'fastxtend/vision/data.py'),
                                       'fastxtend.vision.data.PreBatchAsItem.decodes': ( 'vision.data.html#prebatchasitem.decodes',
                                                                                         'fastxtend/vision/data.py'),
                                       'fastxtend.vision.data.PreBatchAsItem.encodes': ( 'vision.data.html#prebatchasitem.encodes',
                                                                                         'fastxtend/vision/data.py')},
            'fastxtend.vision.models.all': {},
            'fastxtend.vision.models.attention_modules': { 'fastxtend.vision.models.attention_modules.AttentionGate': ( 'vision.models.attention_modules.html#attentiongate',
                                                                                                                        'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.AttentionGate.__init__': ( 'vision.models.attention_modules.html#attentiongate.__init__',
                                                                                                                                 'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.AttentionGate.forward': ( 'vision.models.attention_modules.html#attentiongate.forward',
                                                                                                                                'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.ECA': ( 'vision.models.attention_modules.html#eca',
                                                                                                              'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.ECA.__init__': ( 'vision.models.attention_modules.html#eca.__init__',
                                                                                                                       'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.ECA.forward': ( 'vision.models.attention_modules.html#eca.forward',
                                                                                                                      'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.ShuffleAttention': ( 'vision.models.attention_modules.html#shuffleattention',
                                                                                                                           'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.ShuffleAttention.__init__': ( 'vision.models.attention_modules.html#shuffleattention.__init__',
                                                                                                                                    'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.ShuffleAttention.forward': ( 'vision.models.attention_modules.html#shuffleattention.forward',
                                                                                                                                   'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.TripletAttention': ( 'vision.models.attention_modules.html#tripletattention',
                                                                                                                           'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.TripletAttention.__init__': ( 'vision.models.attention_modules.html#tripletattention.__init__',
                                                                                                                                    'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.TripletAttention.forward': ( 'vision.models.attention_modules.html#tripletattention.forward',
                                                                                                                                   'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.ZPool': ( 'vision.models.attention_modules.html#zpool',
                                                                                                                'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.ZPool.forward': ( 'vision.models.attention_modules.html#zpool.forward',
                                                                                                                        'fastxtend/vision/models/attention_modules.py')},
            'fastxtend.vision.models.pooling': { 'fastxtend.vision.models.pooling.BlurPool': ( 'vision.models.pooling.html#blurpool',
                                                                                               'fastxtend/vision/models/pooling.py'),
                                                 'fastxtend.vision.models.pooling.MaxBlurPool': ( 'vision.models.pooling.html#maxblurpool',
                                                                                                  'fastxtend/vision/models/pooling.py')},
            'fastxtend.vision.models.xresnet': { 'fastxtend.vision.models.xresnet.ECABlock': ( 'vision.models.xresnet.html#ecablock',
                                                                                               'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.ECAResNeXtBlock': ( 'vision.models.xresnet.html#ecaresnextblock',
                                                                                                      'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.ResBlock': ( 'vision.models.xresnet.html#resblock',
                                                                                               'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.ResBlock.__init__': ( 'vision.models.xresnet.html#resblock.__init__',
                                                                                                        'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.ResBlock.forward': ( 'vision.models.xresnet.html#resblock.forward',
                                                                                                       'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.ResNeXtBlock': ( 'vision.models.xresnet.html#resnextblock',
                                                                                                   'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.SABlock': ( 'vision.models.xresnet.html#sablock',
                                                                                              'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.SAResNeXtBlock': ( 'vision.models.xresnet.html#saresnextblock',
                                                                                                     'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.SEBlock': ( 'vision.models.xresnet.html#seblock',
                                                                                              'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.SEResNeXtBlock': ( 'vision.models.xresnet.html#seresnextblock',
                                                                                                     'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.TABlock': ( 'vision.models.xresnet.html#tablock',
                                                                                              'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.TAResNeXtBlock': ( 'vision.models.xresnet.html#taresnextblock',
                                                                                                     'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.XResNet': ( 'vision.models.xresnet.html#xresnet',
                                                                                              'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.XResNet.__init__': ( 'vision.models.xresnet.html#xresnet.__init__',
                                                                                                       'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.XResNet._make_blocks': ( 'vision.models.xresnet.html#xresnet._make_blocks',
                                                                                                           'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.XResNet._make_head': ( 'vision.models.xresnet.html#xresnet._make_head',
                                                                                                         'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.XResNet._make_layer': ( 'vision.models.xresnet.html#xresnet._make_layer',
                                                                                                          'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xeca_resnet101': ( 'vision.models.xresnet.html#xeca_resnet101',
                                                                                                     'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xeca_resnet18': ( 'vision.models.xresnet.html#xeca_resnet18',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xeca_resnet34': ( 'vision.models.xresnet.html#xeca_resnet34',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xeca_resnet50': ( 'vision.models.xresnet.html#xeca_resnet50',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xeca_resnext101': ( 'vision.models.xresnet.html#xeca_resnext101',
                                                                                                      'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xeca_resnext18': ( 'vision.models.xresnet.html#xeca_resnext18',
                                                                                                     'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xeca_resnext34': ( 'vision.models.xresnet.html#xeca_resnext34',
                                                                                                     'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xeca_resnext50': ( 'vision.models.xresnet.html#xeca_resnext50',
                                                                                                     'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xresnet101': ( 'vision.models.xresnet.html#xresnet101',
                                                                                                 'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xresnet18': ( 'vision.models.xresnet.html#xresnet18',
                                                                                                'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xresnet34': ( 'vision.models.xresnet.html#xresnet34',
                                                                                                'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xresnet50': ( 'vision.models.xresnet.html#xresnet50',
                                                                                                'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xresnext101': ( 'vision.models.xresnet.html#xresnext101',
                                                                                                  'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xresnext18': ( 'vision.models.xresnet.html#xresnext18',
                                                                                                 'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xresnext34': ( 'vision.models.xresnet.html#xresnext34',
                                                                                                 'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xresnext50': ( 'vision.models.xresnet.html#xresnext50',
                                                                                                 'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xsa_resnet101': ( 'vision.models.xresnet.html#xsa_resnet101',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xsa_resnet18': ( 'vision.models.xresnet.html#xsa_resnet18',
                                                                                                   'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xsa_resnet34': ( 'vision.models.xresnet.html#xsa_resnet34',
                                                                                                   'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xsa_resnet50': ( 'vision.models.xresnet.html#xsa_resnet50',
                                                                                                   'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xsa_resnext101': ( 'vision.models.xresnet.html#xsa_resnext101',
                                                                                                     'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xsa_resnext18': ( 'vision.models.xresnet.html#xsa_resnext18',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xsa_resnext34': ( 'vision.models.xresnet.html#xsa_resnext34',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xsa_resnext50': ( 'vision.models.xresnet.html#xsa_resnext50',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xse_resnet101': ( 'vision.models.xresnet.html#xse_resnet101',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xse_resnet18': ( 'vision.models.xresnet.html#xse_resnet18',
                                                                                                   'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xse_resnet34': ( 'vision.models.xresnet.html#xse_resnet34',
                                                                                                   'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xse_resnet50': ( 'vision.models.xresnet.html#xse_resnet50',
                                                                                                   'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xse_resnext101': ( 'vision.models.xresnet.html#xse_resnext101',
                                                                                                     'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xse_resnext18': ( 'vision.models.xresnet.html#xse_resnext18',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xse_resnext34': ( 'vision.models.xresnet.html#xse_resnext34',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xse_resnext50': ( 'vision.models.xresnet.html#xse_resnext50',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xta_resnet101': ( 'vision.models.xresnet.html#xta_resnet101',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xta_resnet18': ( 'vision.models.xresnet.html#xta_resnet18',
                                                                                                   'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xta_resnet34': ( 'vision.models.xresnet.html#xta_resnet34',
                                                                                                   'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xta_resnet50': ( 'vision.models.xresnet.html#xta_resnet50',
                                                                                                   'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xta_resnext101': ( 'vision.models.xresnet.html#xta_resnext101',
                                                                                                     'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xta_resnext18': ( 'vision.models.xresnet.html#xta_resnext18',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xta_resnext34': ( 'vision.models.xresnet.html#xta_resnext34',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xta_resnext50': ( 'vision.models.xresnet.html#xta_resnext50',
                                                                                                    'fastxtend/vision/models/xresnet.py')}}}