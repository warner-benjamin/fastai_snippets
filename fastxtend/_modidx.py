# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/',
                'doc_host': 'https://fastxtend.benjaminwarner.dev',
                'git_url': 'https://github.com/warner-benjamin/fastxtend',
                'lib_path': 'fastxtend'},
  'syms': { 'fastxtend.audio.all': {},
            'fastxtend.audio.augment': { 'fastxtend.audio.augment.AmplitudeToDB': ( 'audio.03_augment.html#amplitudetodb',
                                                                                    'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.AmplitudeToDB.__init__': ( 'audio.03_augment.html#amplitudetodb.__init__',
                                                                                             'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.AmplitudeToDB.encodes': ( 'audio.03_augment.html#amplitudetodb.encodes',
                                                                                            'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.AmplitudeToDB.to': ( 'audio.03_augment.html#amplitudetodb.to',
                                                                                       'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.AmplitudeToDBMode': ( 'audio.03_augment.html#amplitudetodbmode',
                                                                                        'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.AudioNormalize': ( 'audio.03_augment.html#audionormalize',
                                                                                     'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.AudioNormalize.__init__': ( 'audio.03_augment.html#audionormalize.__init__',
                                                                                              'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.AudioNormalize.encodes': ( 'audio.03_augment.html#audionormalize.encodes',
                                                                                             'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.AudioNormalize.from_stats': ( 'audio.03_augment.html#audionormalize.from_stats',
                                                                                                'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.AudioNormalize.setups': ( 'audio.03_augment.html#audionormalize.setups',
                                                                                            'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.AudioPadMode': ( 'audio.03_augment.html#audiopadmode',
                                                                                   'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Flip': ('audio.03_augment.html#flip', 'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Flip.__init__': ( 'audio.03_augment.html#flip.__init__',
                                                                                    'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Flip.encodes': ( 'audio.03_augment.html#flip.encodes',
                                                                                   'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.FrequencyMasking': ( 'audio.03_augment.html#frequencymasking',
                                                                                       'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.FrequencyMasking.__init__': ( 'audio.03_augment.html#frequencymasking.__init__',
                                                                                                'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.FrequencyMasking.encodes': ( 'audio.03_augment.html#frequencymasking.encodes',
                                                                                               'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Noise': ('audio.03_augment.html#noise', 'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Noise.__init__': ( 'audio.03_augment.html#noise.__init__',
                                                                                     'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Noise.before_call': ( 'audio.03_augment.html#noise.before_call',
                                                                                        'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Noise.encodes': ( 'audio.03_augment.html#noise.encodes',
                                                                                    'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.NoiseColor': ( 'audio.03_augment.html#noisecolor',
                                                                                 'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PeakNorm': ( 'audio.03_augment.html#peaknorm',
                                                                               'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PeakNorm.__init__': ( 'audio.03_augment.html#peaknorm.__init__',
                                                                                        'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PeakNorm.encodes': ( 'audio.03_augment.html#peaknorm.encodes',
                                                                                       'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PitchShift': ( 'audio.03_augment.html#pitchshift',
                                                                                 'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PitchShift.__init__': ( 'audio.03_augment.html#pitchshift.__init__',
                                                                                          'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PitchShift._validate_fast_shifts': ( 'audio.03_augment.html#pitchshift._validate_fast_shifts',
                                                                                                       'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PitchShift.before_call': ( 'audio.03_augment.html#pitchshift.before_call',
                                                                                             'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PitchShift.encodes': ( 'audio.03_augment.html#pitchshift.encodes',
                                                                                         'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PitchShiftOrTimeStretch': ( 'audio.03_augment.html#pitchshiftortimestretch',
                                                                                              'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PitchShiftOrTimeStretch.__init__': ( 'audio.03_augment.html#pitchshiftortimestretch.__init__',
                                                                                                       'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PitchShiftOrTimeStretch.encodes': ( 'audio.03_augment.html#pitchshiftortimestretch.encodes',
                                                                                                      'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PitchShiftTA': ( 'audio.03_augment.html#pitchshiftta',
                                                                                   'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PitchShiftTA.__init__': ( 'audio.03_augment.html#pitchshiftta.__init__',
                                                                                            'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PitchShiftTA.before_call': ( 'audio.03_augment.html#pitchshiftta.before_call',
                                                                                               'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.PitchShiftTA.encodes': ( 'audio.03_augment.html#pitchshiftta.encodes',
                                                                                           'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.RandomCropPad': ( 'audio.03_augment.html#randomcroppad',
                                                                                    'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.RandomCropPad.__init__': ( 'audio.03_augment.html#randomcroppad.__init__',
                                                                                             'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.RandomCropPad.before_call': ( 'audio.03_augment.html#randomcroppad.before_call',
                                                                                                'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.RandomCropPad.encodes': ( 'audio.03_augment.html#randomcroppad.encodes',
                                                                                            'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Roll': ('audio.03_augment.html#roll', 'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Roll.__init__': ( 'audio.03_augment.html#roll.__init__',
                                                                                    'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Roll.before_call': ( 'audio.03_augment.html#roll.before_call',
                                                                                       'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Roll.encodes': ( 'audio.03_augment.html#roll.encodes',
                                                                                   'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.TensorAudio.crop_pad': ( 'audio.03_augment.html#tensoraudio.crop_pad',
                                                                                           'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.TensorAudio.pitch_shift': ( 'audio.03_augment.html#tensoraudio.pitch_shift',
                                                                                              'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.TensorAudio.time_stretch': ( 'audio.03_augment.html#tensoraudio.time_stretch',
                                                                                               'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.TimeMasking': ( 'audio.03_augment.html#timemasking',
                                                                                  'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.TimeMasking.__init__': ( 'audio.03_augment.html#timemasking.__init__',
                                                                                           'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.TimeMasking.encodes': ( 'audio.03_augment.html#timemasking.encodes',
                                                                                          'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.TimeStretch': ( 'audio.03_augment.html#timestretch',
                                                                                  'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.TimeStretch.__init__': ( 'audio.03_augment.html#timestretch.__init__',
                                                                                           'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.TimeStretch._validate_fast_stretches': ( 'audio.03_augment.html#timestretch._validate_fast_stretches',
                                                                                                           'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.TimeStretch.before_call': ( 'audio.03_augment.html#timestretch.before_call',
                                                                                              'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.TimeStretch.encodes': ( 'audio.03_augment.html#timestretch.encodes',
                                                                                          'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Volume': ('audio.03_augment.html#volume', 'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Volume.__init__': ( 'audio.03_augment.html#volume.__init__',
                                                                                      'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Volume.before_call': ( 'audio.03_augment.html#volume.before_call',
                                                                                         'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.Volume.encodes': ( 'audio.03_augment.html#volume.encodes',
                                                                                     'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.VolumeBatch': ( 'audio.03_augment.html#volumebatch',
                                                                                  'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.VolumeBatch.__init__': ( 'audio.03_augment.html#volumebatch.__init__',
                                                                                           'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.VolumeBatch.before_call': ( 'audio.03_augment.html#volumebatch.before_call',
                                                                                              'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.VolumeBatch.encodes': ( 'audio.03_augment.html#volumebatch.encodes',
                                                                                          'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.VolumeMode': ( 'audio.03_augment.html#volumemode',
                                                                                 'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.VolumeOrPeakNorm': ( 'audio.03_augment.html#volumeorpeaknorm',
                                                                                       'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.VolumeOrPeakNorm.__init__': ( 'audio.03_augment.html#volumeorpeaknorm.__init__',
                                                                                                'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.VolumeOrPeakNorm.before_call': ( 'audio.03_augment.html#volumeorpeaknorm.before_call',
                                                                                                   'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment.VolumeOrPeakNorm.encodes': ( 'audio.03_augment.html#volumeorpeaknorm.encodes',
                                                                                               'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment._combinations_without_repetition': ( 'audio.03_augment.html#_combinations_without_repetition',
                                                                                                       'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment._get_audio_attr': ( 'audio.03_augment.html#_get_audio_attr',
                                                                                      'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment._get_fast_shifts': ( 'audio.03_augment.html#_get_fast_shifts',
                                                                                       'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment._get_fast_stretches': ( 'audio.03_augment.html#_get_fast_stretches',
                                                                                          'fastxtend/audio/augment.py'),
                                         'fastxtend.audio.augment._semitones_to_ratio': ( 'audio.03_augment.html#_semitones_to_ratio',
                                                                                          'fastxtend/audio/augment.py')},
            'fastxtend.audio.core': { 'fastxtend.audio.core.TensorAudio': ('audio.01_core.html#tensoraudio', 'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorAudio.__new__': ( 'audio.01_core.html#tensoraudio.__new__',
                                                                                    'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorAudio.channels': ( 'audio.01_core.html#tensoraudio.channels',
                                                                                     'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorAudio.create': ( 'audio.01_core.html#tensoraudio.create',
                                                                                   'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorAudio.duration': ( 'audio.01_core.html#tensoraudio.duration',
                                                                                     'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorAudio.hear': ( 'audio.01_core.html#tensoraudio.hear',
                                                                                 'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorAudio.samples': ( 'audio.01_core.html#tensoraudio.samples',
                                                                                    'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorAudio.save': ( 'audio.01_core.html#tensoraudio.save',
                                                                                 'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorAudio.show': ( 'audio.01_core.html#tensoraudio.show',
                                                                                 'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorMelSpec': ('audio.01_core.html#tensormelspec', 'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorMelSpec._all_show_args': ( 'audio.01_core.html#tensormelspec._all_show_args',
                                                                                             'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorMelSpec.channels': ( 'audio.01_core.html#tensormelspec.channels',
                                                                                       'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorMelSpec.create': ( 'audio.01_core.html#tensormelspec.create',
                                                                                     'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorMelSpec.duration': ( 'audio.01_core.html#tensormelspec.duration',
                                                                                       'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorMelSpec.height': ( 'audio.01_core.html#tensormelspec.height',
                                                                                     'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorMelSpec.width': ( 'audio.01_core.html#tensormelspec.width',
                                                                                    'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorSpec': ('audio.01_core.html#tensorspec', 'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorSpec.__getattr__': ( 'audio.01_core.html#tensorspec.__getattr__',
                                                                                       'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorSpec._all_show_args': ( 'audio.01_core.html#tensorspec._all_show_args',
                                                                                          'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorSpec._colorbar_fmt': ( 'audio.01_core.html#tensorspec._colorbar_fmt',
                                                                                         'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorSpec.channels': ( 'audio.01_core.html#tensorspec.channels',
                                                                                    'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorSpec.create': ( 'audio.01_core.html#tensorspec.create',
                                                                                  'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorSpec.duration': ( 'audio.01_core.html#tensorspec.duration',
                                                                                    'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorSpec.height': ( 'audio.01_core.html#tensorspec.height',
                                                                                  'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorSpec.show': ( 'audio.01_core.html#tensorspec.show',
                                                                                'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.TensorSpec.width': ( 'audio.01_core.html#tensorspec.width',
                                                                                 'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.get_usable_kwargs': ( 'audio.01_core.html#get_usable_kwargs',
                                                                                  'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.show_audio_signal': ( 'audio.01_core.html#show_audio_signal',
                                                                                  'fastxtend/audio/core.py'),
                                      'fastxtend.audio.core.show_spectrogram': ( 'audio.01_core.html#show_spectrogram',
                                                                                 'fastxtend/audio/core.py')},
            'fastxtend.audio.data': { 'fastxtend.audio.data.AudioBlock': ('audio.02_data.html#audioblock', 'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.MelSpecBlock': ('audio.02_data.html#melspecblock', 'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.MelSpectrogram': ( 'audio.02_data.html#melspectrogram',
                                                                               'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.MelSpectrogram.__init__': ( 'audio.02_data.html#melspectrogram.__init__',
                                                                                        'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.MelSpectrogram._get_attrs': ( 'audio.02_data.html#melspectrogram._get_attrs',
                                                                                          'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.MelSpectrogram.encodes': ( 'audio.02_data.html#melspectrogram.encodes',
                                                                                       'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.MelSpectrogram.to': ( 'audio.02_data.html#melspectrogram.to',
                                                                                  'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.SpecBlock': ('audio.02_data.html#specblock', 'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.Spectrogram': ('audio.02_data.html#spectrogram', 'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.Spectrogram.__init__': ( 'audio.02_data.html#spectrogram.__init__',
                                                                                     'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.Spectrogram._get_attrs': ( 'audio.02_data.html#spectrogram._get_attrs',
                                                                                       'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.Spectrogram.encodes': ( 'audio.02_data.html#spectrogram.encodes',
                                                                                    'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.Spectrogram.to': ( 'audio.02_data.html#spectrogram.to',
                                                                               'fastxtend/audio/data.py'),
                                      'fastxtend.audio.data.show_batch': ('audio.02_data.html#show_batch', 'fastxtend/audio/data.py')},
            'fastxtend.audio.learner': { 'fastxtend.audio.learner.StackSpecCallback': ( 'audio.04_learner.html#stackspeccallback',
                                                                                        'fastxtend/audio/learner.py'),
                                         'fastxtend.audio.learner.StackSpecCallback.before_batch': ( 'audio.04_learner.html#stackspeccallback.before_batch',
                                                                                                     'fastxtend/audio/learner.py'),
                                         'fastxtend.audio.learner.audio_learner': ( 'audio.04_learner.html#audio_learner',
                                                                                    'fastxtend/audio/learner.py')},
            'fastxtend.audio.mixup': { 'fastxtend.audio.mixup.AudioCutMix': ('audio.05_mixup.html#audiocutmix', 'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMix.__init__': ( 'audio.05_mixup.html#audiocutmix.__init__',
                                                                                       'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMix._multi_cutmix': ( 'audio.05_mixup.html#audiocutmix._multi_cutmix',
                                                                                            'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMix._uniform_cutmix': ( 'audio.05_mixup.html#audiocutmix._uniform_cutmix',
                                                                                              'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMix.before_batch': ( 'audio.05_mixup.html#audiocutmix.before_batch',
                                                                                           'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMix.rand_cut': ( 'audio.05_mixup.html#audiocutmix.rand_cut',
                                                                                       'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMixUp': ( 'audio.05_mixup.html#audiocutmixup',
                                                                                'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMixUp.__init__': ( 'audio.05_mixup.html#audiocutmixup.__init__',
                                                                                         'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMixUp.before_batch': ( 'audio.05_mixup.html#audiocutmixup.before_batch',
                                                                                             'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMixUpAugment': ( 'audio.05_mixup.html#audiocutmixupaugment',
                                                                                       'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMixUpAugment.__init__': ( 'audio.05_mixup.html#audiocutmixupaugment.__init__',
                                                                                                'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMixUpAugment.after_cancel_fit': ( 'audio.05_mixup.html#audiocutmixupaugment.after_cancel_fit',
                                                                                                        'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMixUpAugment.before_batch': ( 'audio.05_mixup.html#audiocutmixupaugment.before_batch',
                                                                                                    'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMixUpAugment.before_fit': ( 'audio.05_mixup.html#audiocutmixupaugment.before_fit',
                                                                                                  'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMixUpAugment.multi_lf': ( 'audio.05_mixup.html#audiocutmixupaugment.multi_lf',
                                                                                                'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioCutMixUpAugment.solo_lf': ( 'audio.05_mixup.html#audiocutmixupaugment.solo_lf',
                                                                                               'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioMixHandler': ( 'audio.05_mixup.html#audiomixhandler',
                                                                                  'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioMixHandler.__init__': ( 'audio.05_mixup.html#audiomixhandler.__init__',
                                                                                           'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioMixHandler.after_cancel_fit': ( 'audio.05_mixup.html#audiomixhandler.after_cancel_fit',
                                                                                                   'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioMixHandler.after_fit': ( 'audio.05_mixup.html#audiomixhandler.after_fit',
                                                                                            'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioMixHandler.before_fit': ( 'audio.05_mixup.html#audiomixhandler.before_fit',
                                                                                             'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioMixUp': ('audio.05_mixup.html#audiomixup', 'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioMixUp.__init__': ( 'audio.05_mixup.html#audiomixup.__init__',
                                                                                      'fastxtend/audio/mixup.py'),
                                       'fastxtend.audio.mixup.AudioMixUp.before_batch': ( 'audio.05_mixup.html#audiomixup.before_batch',
                                                                                          'fastxtend/audio/mixup.py')},
            'fastxtend.basics': { 'fastxtend.basics.is_listish': ('basics.html#is_listish', 'fastxtend/basics.py'),
                                  'fastxtend.basics.listify_store_attr': ('basics.html#listify_store_attr', 'fastxtend/basics.py'),
                                  'fastxtend.basics.show_batch': ('basics.html#show_batch', 'fastxtend/basics.py')},
            'fastxtend.callback.all': {},
            'fastxtend.callback.amp': { 'fastxtend.callback.amp.AMPMode': ('callback.amp.html#ampmode', 'fastxtend/callback/amp.py'),
                                        'fastxtend.callback.amp.Learner.to_bf16': ( 'callback.amp.html#learner.to_bf16',
                                                                                    'fastxtend/callback/amp.py'),
                                        'fastxtend.callback.amp.Learner.to_fp16': ( 'callback.amp.html#learner.to_fp16',
                                                                                    'fastxtend/callback/amp.py'),
                                        'fastxtend.callback.amp.Learner.to_fp32': ( 'callback.amp.html#learner.to_fp32',
                                                                                    'fastxtend/callback/amp.py'),
                                        'fastxtend.callback.amp.MixedPrecision': ( 'callback.amp.html#mixedprecision',
                                                                                   'fastxtend/callback/amp.py'),
                                        'fastxtend.callback.amp.MixedPrecision.__init__': ( 'callback.amp.html#mixedprecision.__init__',
                                                                                            'fastxtend/callback/amp.py'),
                                        'fastxtend.callback.amp.MixedPrecision.after_fit': ( 'callback.amp.html#mixedprecision.after_fit',
                                                                                             'fastxtend/callback/amp.py'),
                                        'fastxtend.callback.amp.MixedPrecision.after_loss': ( 'callback.amp.html#mixedprecision.after_loss',
                                                                                              'fastxtend/callback/amp.py'),
                                        'fastxtend.callback.amp.MixedPrecision.after_pred': ( 'callback.amp.html#mixedprecision.after_pred',
                                                                                              'fastxtend/callback/amp.py'),
                                        'fastxtend.callback.amp.MixedPrecision.after_step': ( 'callback.amp.html#mixedprecision.after_step',
                                                                                              'fastxtend/callback/amp.py'),
                                        'fastxtend.callback.amp.MixedPrecision.before_backward': ( 'callback.amp.html#mixedprecision.before_backward',
                                                                                                   'fastxtend/callback/amp.py'),
                                        'fastxtend.callback.amp.MixedPrecision.before_batch': ( 'callback.amp.html#mixedprecision.before_batch',
                                                                                                'fastxtend/callback/amp.py'),
                                        'fastxtend.callback.amp.MixedPrecision.before_fit': ( 'callback.amp.html#mixedprecision.before_fit',
                                                                                              'fastxtend/callback/amp.py'),
                                        'fastxtend.callback.amp.MixedPrecision.before_step': ( 'callback.amp.html#mixedprecision.before_step',
                                                                                               'fastxtend/callback/amp.py'),
                                        'fastxtend.callback.amp.MixedPrecision.param_groups': ( 'callback.amp.html#mixedprecision.param_groups',
                                                                                                'fastxtend/callback/amp.py'),
                                        'fastxtend.callback.amp.MixedPrecision.step': ( 'callback.amp.html#mixedprecision.step',
                                                                                        'fastxtend/callback/amp.py')},
            'fastxtend.callback.channelslast': { 'fastxtend.callback.channelslast.ChannelsLast': ( 'callback.channelslast.html#channelslast',
                                                                                                   'fastxtend/callback/channelslast.py'),
                                                 'fastxtend.callback.channelslast.ChannelsLast.before_fit': ( 'callback.channelslast.html#channelslast.before_fit',
                                                                                                              'fastxtend/callback/channelslast.py'),
                                                 'fastxtend.callback.channelslast.Learner.to_channelslast': ( 'callback.channelslast.html#learner.to_channelslast',
                                                                                                              'fastxtend/callback/channelslast.py'),
                                                 'fastxtend.callback.channelslast.Learner.to_contiguous': ( 'callback.channelslast.html#learner.to_contiguous',
                                                                                                            'fastxtend/callback/channelslast.py')},
            'fastxtend.callback.compiler': { 'fastxtend.callback.compiler.CompileMode': ( 'callback.compiler.html#compilemode',
                                                                                          'fastxtend/callback/compiler.py'),
                                             'fastxtend.callback.compiler.CompilerCallback': ( 'callback.compiler.html#compilercallback',
                                                                                               'fastxtend/callback/compiler.py'),
                                             'fastxtend.callback.compiler.CompilerCallback.__init__': ( 'callback.compiler.html#compilercallback.__init__',
                                                                                                        'fastxtend/callback/compiler.py'),
                                             'fastxtend.callback.compiler.CompilerCallback._reset_compiled': ( 'callback.compiler.html#compilercallback._reset_compiled',
                                                                                                               'fastxtend/callback/compiler.py'),
                                             'fastxtend.callback.compiler.CompilerCallback.before_fit': ( 'callback.compiler.html#compilercallback.before_fit',
                                                                                                          'fastxtend/callback/compiler.py'),
                                             'fastxtend.callback.compiler.DynamoExplainCallback': ( 'callback.compiler.html#dynamoexplaincallback',
                                                                                                    'fastxtend/callback/compiler.py'),
                                             'fastxtend.callback.compiler.DynamoExplainCallback.__init__': ( 'callback.compiler.html#dynamoexplaincallback.__init__',
                                                                                                             'fastxtend/callback/compiler.py'),
                                             'fastxtend.callback.compiler.DynamoExplainCallback.before_fit': ( 'callback.compiler.html#dynamoexplaincallback.before_fit',
                                                                                                               'fastxtend/callback/compiler.py'),
                                             'fastxtend.callback.compiler.Learner.compile': ( 'callback.compiler.html#learner.compile',
                                                                                              'fastxtend/callback/compiler.py'),
                                             'fastxtend.callback.compiler.Learner.export': ( 'callback.compiler.html#learner.export',
                                                                                             'fastxtend/callback/compiler.py'),
                                             'fastxtend.callback.compiler.Learner.fine_tune': ( 'callback.compiler.html#learner.fine_tune',
                                                                                                'fastxtend/callback/compiler.py'),
                                             'fastxtend.callback.compiler.Learner.freeze_to': ( 'callback.compiler.html#learner.freeze_to',
                                                                                                'fastxtend/callback/compiler.py'),
                                             'fastxtend.callback.compiler.MatMulPrecision': ( 'callback.compiler.html#matmulprecision',
                                                                                              'fastxtend/callback/compiler.py'),
                                             'fastxtend.callback.compiler.is_compiled': ( 'callback.compiler.html#is_compiled',
                                                                                          'fastxtend/callback/compiler.py'),
                                             'fastxtend.callback.compiler.load_learner': ( 'callback.compiler.html#load_learner',
                                                                                           'fastxtend/callback/compiler.py')},
            'fastxtend.callback.cutmixup': { 'fastxtend.callback.cutmixup.CutMix': ( 'callback.cutmixup.html#cutmix',
                                                                                     'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMix.__init__': ( 'callback.cutmixup.html#cutmix.__init__',
                                                                                              'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMix._multi_cutmix': ( 'callback.cutmixup.html#cutmix._multi_cutmix',
                                                                                                   'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMix._uniform_cutmix': ( 'callback.cutmixup.html#cutmix._uniform_cutmix',
                                                                                                     'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMix.before_batch': ( 'callback.cutmixup.html#cutmix.before_batch',
                                                                                                  'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMix.rand_bbox': ( 'callback.cutmixup.html#cutmix.rand_bbox',
                                                                                               'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMixUp': ( 'callback.cutmixup.html#cutmixup',
                                                                                       'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMixUp.__init__': ( 'callback.cutmixup.html#cutmixup.__init__',
                                                                                                'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMixUp.before_batch': ( 'callback.cutmixup.html#cutmixup.before_batch',
                                                                                                    'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMixUpAugment': ( 'callback.cutmixup.html#cutmixupaugment',
                                                                                              'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMixUpAugment.__init__': ( 'callback.cutmixup.html#cutmixupaugment.__init__',
                                                                                                       'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMixUpAugment.after_cancel_fit': ( 'callback.cutmixup.html#cutmixupaugment.after_cancel_fit',
                                                                                                               'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMixUpAugment.after_fit': ( 'callback.cutmixup.html#cutmixupaugment.after_fit',
                                                                                                        'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMixUpAugment.before_batch': ( 'callback.cutmixup.html#cutmixupaugment.before_batch',
                                                                                                           'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMixUpAugment.before_fit': ( 'callback.cutmixup.html#cutmixupaugment.before_fit',
                                                                                                         'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMixUpAugment.multi_lf': ( 'callback.cutmixup.html#cutmixupaugment.multi_lf',
                                                                                                       'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.CutMixUpAugment.solo_lf': ( 'callback.cutmixup.html#cutmixupaugment.solo_lf',
                                                                                                      'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.MixUp': ( 'callback.cutmixup.html#mixup',
                                                                                    'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.MixUp.__init__': ( 'callback.cutmixup.html#mixup.__init__',
                                                                                             'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.MixUp._mixup': ( 'callback.cutmixup.html#mixup._mixup',
                                                                                           'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup.MixUp.before_batch': ( 'callback.cutmixup.html#mixup.before_batch',
                                                                                                 'fastxtend/callback/cutmixup.py'),
                                             'fastxtend.callback.cutmixup._do_cutmixaug': ( 'callback.cutmixup.html#_do_cutmixaug',
                                                                                            'fastxtend/callback/cutmixup.py')},
            'fastxtend.callback.ema': { 'fastxtend.callback.ema.EMACallback': ( 'callback.ema.html#emacallback',
                                                                                'fastxtend/callback/ema.py'),
                                        'fastxtend.callback.ema.EMACallback.__init__': ( 'callback.ema.html#emacallback.__init__',
                                                                                         'fastxtend/callback/ema.py'),
                                        'fastxtend.callback.ema.EMACallback.after_batch': ( 'callback.ema.html#emacallback.after_batch',
                                                                                            'fastxtend/callback/ema.py'),
                                        'fastxtend.callback.ema.EMACallback.after_cancel_batch': ( 'callback.ema.html#emacallback.after_cancel_batch',
                                                                                                   'fastxtend/callback/ema.py'),
                                        'fastxtend.callback.ema.EMACallback.after_cancel_step': ( 'callback.ema.html#emacallback.after_cancel_step',
                                                                                                  'fastxtend/callback/ema.py'),
                                        'fastxtend.callback.ema.EMACallback.after_fit': ( 'callback.ema.html#emacallback.after_fit',
                                                                                          'fastxtend/callback/ema.py'),
                                        'fastxtend.callback.ema.EMACallback.after_validate': ( 'callback.ema.html#emacallback.after_validate',
                                                                                               'fastxtend/callback/ema.py'),
                                        'fastxtend.callback.ema.EMACallback.before_batch': ( 'callback.ema.html#emacallback.before_batch',
                                                                                             'fastxtend/callback/ema.py'),
                                        'fastxtend.callback.ema.EMACallback.before_fit': ( 'callback.ema.html#emacallback.before_fit',
                                                                                           'fastxtend/callback/ema.py'),
                                        'fastxtend.callback.ema.EMACallback.before_validate': ( 'callback.ema.html#emacallback.before_validate',
                                                                                                'fastxtend/callback/ema.py'),
                                        'fastxtend.callback.ema.EMASchedule': ( 'callback.ema.html#emaschedule',
                                                                                'fastxtend/callback/ema.py'),
                                        'fastxtend.callback.ema.EMASchedule.__init__': ( 'callback.ema.html#emaschedule.__init__',
                                                                                         'fastxtend/callback/ema.py'),
                                        'fastxtend.callback.ema.EMASchedule.after_batch': ( 'callback.ema.html#emaschedule.after_batch',
                                                                                            'fastxtend/callback/ema.py'),
                                        'fastxtend.callback.ema.EMASchedule.before_fit': ( 'callback.ema.html#emaschedule.before_fit',
                                                                                           'fastxtend/callback/ema.py'),
                                        'fastxtend.callback.ema.EMAWarmupCallback': ( 'callback.ema.html#emawarmupcallback',
                                                                                      'fastxtend/callback/ema.py'),
                                        'fastxtend.callback.ema.EMAWarmupCallback.__init__': ( 'callback.ema.html#emawarmupcallback.__init__',
                                                                                               'fastxtend/callback/ema.py')},
            'fastxtend.callback.gradaccum': { 'fastxtend.callback.gradaccum.GradientAccumulation': ( 'callback.gradaccum.html#gradientaccumulation',
                                                                                                     'fastxtend/callback/gradaccum.py'),
                                              'fastxtend.callback.gradaccum.GradientAccumulation.__init__': ( 'callback.gradaccum.html#gradientaccumulation.__init__',
                                                                                                              'fastxtend/callback/gradaccum.py'),
                                              'fastxtend.callback.gradaccum.GradientAccumulation._run_loggers': ( 'callback.gradaccum.html#gradientaccumulation._run_loggers',
                                                                                                                  'fastxtend/callback/gradaccum.py'),
                                              'fastxtend.callback.gradaccum.GradientAccumulation.after_loss': ( 'callback.gradaccum.html#gradientaccumulation.after_loss',
                                                                                                                'fastxtend/callback/gradaccum.py'),
                                              'fastxtend.callback.gradaccum.GradientAccumulation.after_train': ( 'callback.gradaccum.html#gradientaccumulation.after_train',
                                                                                                                 'fastxtend/callback/gradaccum.py'),
                                              'fastxtend.callback.gradaccum.GradientAccumulation.before_batch': ( 'callback.gradaccum.html#gradientaccumulation.before_batch',
                                                                                                                  'fastxtend/callback/gradaccum.py'),
                                              'fastxtend.callback.gradaccum.GradientAccumulation.before_fit': ( 'callback.gradaccum.html#gradientaccumulation.before_fit',
                                                                                                                'fastxtend/callback/gradaccum.py'),
                                              'fastxtend.callback.gradaccum.GradientAccumulation.before_step': ( 'callback.gradaccum.html#gradientaccumulation.before_step',
                                                                                                                 'fastxtend/callback/gradaccum.py'),
                                              'fastxtend.callback.gradaccum.GradientAccumulation.before_train': ( 'callback.gradaccum.html#gradientaccumulation.before_train',
                                                                                                                  'fastxtend/callback/gradaccum.py'),
                                              'fastxtend.callback.gradaccum.GradientAccumulationSchedule': ( 'callback.gradaccum.html#gradientaccumulationschedule',
                                                                                                             'fastxtend/callback/gradaccum.py'),
                                              'fastxtend.callback.gradaccum.GradientAccumulationSchedule.__init__': ( 'callback.gradaccum.html#gradientaccumulationschedule.__init__',
                                                                                                                      'fastxtend/callback/gradaccum.py'),
                                              'fastxtend.callback.gradaccum.GradientAccumulationSchedule._run_loggers': ( 'callback.gradaccum.html#gradientaccumulationschedule._run_loggers',
                                                                                                                          'fastxtend/callback/gradaccum.py'),
                                              'fastxtend.callback.gradaccum.GradientAccumulationSchedule.before_batch': ( 'callback.gradaccum.html#gradientaccumulationschedule.before_batch',
                                                                                                                          'fastxtend/callback/gradaccum.py'),
                                              'fastxtend.callback.gradaccum.GradientAccumulationSchedule.before_fit': ( 'callback.gradaccum.html#gradientaccumulationschedule.before_fit',
                                                                                                                        'fastxtend/callback/gradaccum.py')},
            'fastxtend.callback.lr_finder': { 'fastxtend.callback.lr_finder.LRFinder': ( 'callback.lr_finder.html#lrfinder',
                                                                                         'fastxtend/callback/lr_finder.py'),
                                              'fastxtend.callback.lr_finder.LRFinder.__init__': ( 'callback.lr_finder.html#lrfinder.__init__',
                                                                                                  'fastxtend/callback/lr_finder.py'),
                                              'fastxtend.callback.lr_finder.LRFinder.after_batch': ( 'callback.lr_finder.html#lrfinder.after_batch',
                                                                                                     'fastxtend/callback/lr_finder.py'),
                                              'fastxtend.callback.lr_finder.LRFinder.after_fit': ( 'callback.lr_finder.html#lrfinder.after_fit',
                                                                                                   'fastxtend/callback/lr_finder.py'),
                                              'fastxtend.callback.lr_finder.LRFinder.before_batch': ( 'callback.lr_finder.html#lrfinder.before_batch',
                                                                                                      'fastxtend/callback/lr_finder.py'),
                                              'fastxtend.callback.lr_finder.LRFinder.before_fit': ( 'callback.lr_finder.html#lrfinder.before_fit',
                                                                                                    'fastxtend/callback/lr_finder.py'),
                                              'fastxtend.callback.lr_finder.LRFinder.before_validate': ( 'callback.lr_finder.html#lrfinder.before_validate',
                                                                                                         'fastxtend/callback/lr_finder.py'),
                                              'fastxtend.callback.lr_finder.Learner.lr_find': ( 'callback.lr_finder.html#learner.lr_find',
                                                                                                'fastxtend/callback/lr_finder.py')},
            'fastxtend.callback.profiler': { 'fastxtend.callback.profiler.Callback.__call__': ( 'callback.profiler.html#callback.__call__',
                                                                                                'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.Learner._call_one': ( 'callback.profiler.html#learner._call_one',
                                                                                                'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.Learner.all_batches': ( 'callback.profiler.html#learner.all_batches',
                                                                                                  'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.Learner.profile': ( 'callback.profiler.html#learner.profile',
                                                                                              'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.Learner.show_training_loop': ( 'callback.profiler.html#learner.show_training_loop',
                                                                                                         'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ProfileMode': ( 'callback.profiler.html#profilemode',
                                                                                          'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.SimpleProfilerCallback': ( 'callback.profiler.html#simpleprofilercallback',
                                                                                                     'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.SimpleProfilerCallback.__init__': ( 'callback.profiler.html#simpleprofilercallback.__init__',
                                                                                                              'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.SimpleProfilerCallback.after_batch': ( 'callback.profiler.html#simpleprofilercallback.after_batch',
                                                                                                                 'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.SimpleProfilerCallback.before_backward': ( 'callback.profiler.html#simpleprofilercallback.before_backward',
                                                                                                                     'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.SimpleProfilerCallback.before_step': ( 'callback.profiler.html#simpleprofilercallback.before_step',
                                                                                                                 'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.SimpleProfilerPostCallback': ( 'callback.profiler.html#simpleprofilerpostcallback',
                                                                                                         'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.SimpleProfilerPostCallback.__init__': ( 'callback.profiler.html#simpleprofilerpostcallback.__init__',
                                                                                                                  'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.SimpleProfilerPostCallback.after_fit': ( 'callback.profiler.html#simpleprofilerpostcallback.after_fit',
                                                                                                                   'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.SimpleProfilerPostCallback.after_loss': ( 'callback.profiler.html#simpleprofilerpostcallback.after_loss',
                                                                                                                    'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.SimpleProfilerPostCallback.after_pred': ( 'callback.profiler.html#simpleprofilerpostcallback.after_pred',
                                                                                                                    'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.SimpleProfilerPostCallback.after_step': ( 'callback.profiler.html#simpleprofilerpostcallback.after_step',
                                                                                                                    'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.SimpleProfilerPostCallback.before_fit': ( 'callback.profiler.html#simpleprofilerpostcallback.before_fit',
                                                                                                                    'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputCallback': ( 'callback.profiler.html#throughputcallback',
                                                                                                 'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputCallback.__init__': ( 'callback.profiler.html#throughputcallback.__init__',
                                                                                                          'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputCallback._append_to_df': ( 'callback.profiler.html#throughputcallback._append_to_df',
                                                                                                               'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputCallback._calc_percent': ( 'callback.profiler.html#throughputcallback._calc_percent',
                                                                                                               'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputCallback._create_detail_row': ( 'callback.profiler.html#throughputcallback._create_detail_row',
                                                                                                                    'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputCallback._create_overview_row': ( 'callback.profiler.html#throughputcallback._create_overview_row',
                                                                                                                      'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputCallback._display_report': ( 'callback.profiler.html#throughputcallback._display_report',
                                                                                                                 'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputCallback._generate_report': ( 'callback.profiler.html#throughputcallback._generate_report',
                                                                                                                  'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputCallback._log_after_batch': ( 'callback.profiler.html#throughputcallback._log_after_batch',
                                                                                                                  'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputCallback._log_after_fit': ( 'callback.profiler.html#throughputcallback._log_after_fit',
                                                                                                                'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputCallback._samples_per_second': ( 'callback.profiler.html#throughputcallback._samples_per_second',
                                                                                                                     'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputCallback.before_batch': ( 'callback.profiler.html#throughputcallback.before_batch',
                                                                                                              'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputCallback.before_draw': ( 'callback.profiler.html#throughputcallback.before_draw',
                                                                                                             'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputCallback.before_epoch': ( 'callback.profiler.html#throughputcallback.before_epoch',
                                                                                                              'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputCallback.before_fit': ( 'callback.profiler.html#throughputcallback.before_fit',
                                                                                                            'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputCallback.before_train': ( 'callback.profiler.html#throughputcallback.before_train',
                                                                                                              'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputCallback.before_validate': ( 'callback.profiler.html#throughputcallback.before_validate',
                                                                                                                 'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputPostCallback': ( 'callback.profiler.html#throughputpostcallback',
                                                                                                     'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputPostCallback.__init__': ( 'callback.profiler.html#throughputpostcallback.__init__',
                                                                                                              'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputPostCallback._after_fit': ( 'callback.profiler.html#throughputpostcallback._after_fit',
                                                                                                                'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputPostCallback._before_fit': ( 'callback.profiler.html#throughputpostcallback._before_fit',
                                                                                                                 'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputPostCallback.after_batch': ( 'callback.profiler.html#throughputpostcallback.after_batch',
                                                                                                                 'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputPostCallback.after_epoch': ( 'callback.profiler.html#throughputpostcallback.after_epoch',
                                                                                                                 'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputPostCallback.after_fit': ( 'callback.profiler.html#throughputpostcallback.after_fit',
                                                                                                               'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputPostCallback.after_train': ( 'callback.profiler.html#throughputpostcallback.after_train',
                                                                                                                 'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputPostCallback.after_validate': ( 'callback.profiler.html#throughputpostcallback.after_validate',
                                                                                                                    'fastxtend/callback/profiler.py'),
                                             'fastxtend.callback.profiler.ThroughputPostCallback.before_fit': ( 'callback.profiler.html#throughputpostcallback.before_fit',
                                                                                                                'fastxtend/callback/profiler.py')},
            'fastxtend.callback.progresize': { 'fastxtend.callback.progresize.IncreaseMode': ( 'callback.progresize.html#increasemode',
                                                                                               'fastxtend/callback/progresize.py'),
                                               'fastxtend.callback.progresize.ProgressiveResize': ( 'callback.progresize.html#progressiveresize',
                                                                                                    'fastxtend/callback/progresize.py'),
                                               'fastxtend.callback.progresize.ProgressiveResize.__init__': ( 'callback.progresize.html#progressiveresize.__init__',
                                                                                                             'fastxtend/callback/progresize.py'),
                                               'fastxtend.callback.progresize.ProgressiveResize._increase_size': ( 'callback.progresize.html#progressiveresize._increase_size',
                                                                                                                   'fastxtend/callback/progresize.py'),
                                               'fastxtend.callback.progresize.ProgressiveResize._log_size': ( 'callback.progresize.html#progressiveresize._log_size',
                                                                                                              'fastxtend/callback/progresize.py'),
                                               'fastxtend.callback.progresize.ProgressiveResize._process_pipeline': ( 'callback.progresize.html#progressiveresize._process_pipeline',
                                                                                                                      'fastxtend/callback/progresize.py'),
                                               'fastxtend.callback.progresize.ProgressiveResize.after_epoch': ( 'callback.progresize.html#progressiveresize.after_epoch',
                                                                                                                'fastxtend/callback/progresize.py'),
                                               'fastxtend.callback.progresize.ProgressiveResize.before_batch': ( 'callback.progresize.html#progressiveresize.before_batch',
                                                                                                                 'fastxtend/callback/progresize.py'),
                                               'fastxtend.callback.progresize.ProgressiveResize.before_fit': ( 'callback.progresize.html#progressiveresize.before_fit',
                                                                                                               'fastxtend/callback/progresize.py'),
                                               'fastxtend.callback.progresize.ProgressiveResize.before_train': ( 'callback.progresize.html#progressiveresize.before_train',
                                                                                                                 'fastxtend/callback/progresize.py'),
                                               'fastxtend.callback.progresize._batch_subset': ( 'callback.progresize.html#_batch_subset',
                                                                                                'fastxtend/callback/progresize.py'),
                                               'fastxtend.callback.progresize._evenly_divisible': ( 'callback.progresize.html#_evenly_divisible',
                                                                                                    'fastxtend/callback/progresize.py'),
                                               'fastxtend.callback.progresize._num_steps': ( 'callback.progresize.html#_num_steps',
                                                                                             'fastxtend/callback/progresize.py'),
                                               'fastxtend.callback.progresize._to_size': ( 'callback.progresize.html#_to_size',
                                                                                           'fastxtend/callback/progresize.py')},
            'fastxtend.callback.simpleprofiler': {},
            'fastxtend.callback.tracker': { 'fastxtend.callback.tracker.LastMetricCallback': ( 'callback.tracker.html#lastmetriccallback',
                                                                                               'fastxtend/callback/tracker.py'),
                                            'fastxtend.callback.tracker.LastMetricCallback.__init__': ( 'callback.tracker.html#lastmetriccallback.__init__',
                                                                                                        'fastxtend/callback/tracker.py'),
                                            'fastxtend.callback.tracker.LastMetricCallback.after_fit': ( 'callback.tracker.html#lastmetriccallback.after_fit',
                                                                                                         'fastxtend/callback/tracker.py'),
                                            'fastxtend.callback.tracker.LastMetricCallback.after_fit_exception': ( 'callback.tracker.html#lastmetriccallback.after_fit_exception',
                                                                                                                   'fastxtend/callback/tracker.py'),
                                            'fastxtend.callback.tracker.LastMetricCallback.before_fit': ( 'callback.tracker.html#lastmetriccallback.before_fit',
                                                                                                          'fastxtend/callback/tracker.py'),
                                            'fastxtend.callback.tracker.SaveModelAtEnd': ( 'callback.tracker.html#savemodelatend',
                                                                                           'fastxtend/callback/tracker.py'),
                                            'fastxtend.callback.tracker.SaveModelAtEnd.__init__': ( 'callback.tracker.html#savemodelatend.__init__',
                                                                                                    'fastxtend/callback/tracker.py'),
                                            'fastxtend.callback.tracker.SaveModelAtEnd.after_epoch': ( 'callback.tracker.html#savemodelatend.after_epoch',
                                                                                                       'fastxtend/callback/tracker.py'),
                                            'fastxtend.callback.tracker.SaveModelAtEnd.after_fit': ( 'callback.tracker.html#savemodelatend.after_fit',
                                                                                                     'fastxtend/callback/tracker.py'),
                                            'fastxtend.callback.tracker.SaveModelAtEnd.before_fit': ( 'callback.tracker.html#savemodelatend.before_fit',
                                                                                                      'fastxtend/callback/tracker.py'),
                                            'fastxtend.callback.tracker.TerminateOnTrainNaN': ( 'callback.tracker.html#terminateontrainnan',
                                                                                                'fastxtend/callback/tracker.py'),
                                            'fastxtend.callback.tracker.TerminateOnTrainNaN.after_batch': ( 'callback.tracker.html#terminateontrainnan.after_batch',
                                                                                                            'fastxtend/callback/tracker.py')},
            'fastxtend.callback.utils': { 'fastxtend.callback.utils.CallbackScheduler': ( 'callback.utils.html#callbackscheduler',
                                                                                          'fastxtend/callback/utils.py'),
                                          'fastxtend.callback.utils.CallbackScheduler.schedule_step': ( 'callback.utils.html#callbackscheduler.schedule_step',
                                                                                                        'fastxtend/callback/utils.py'),
                                          'fastxtend.callback.utils.CallbackScheduler.setup_schedule': ( 'callback.utils.html#callbackscheduler.setup_schedule',
                                                                                                         'fastxtend/callback/utils.py'),
                                          'fastxtend.callback.utils.Learner._log_dict': ( 'callback.utils.html#learner._log_dict',
                                                                                          'fastxtend/callback/utils.py'),
                                          'fastxtend.callback.utils.Learner._log_values': ( 'callback.utils.html#learner._log_values',
                                                                                            'fastxtend/callback/utils.py'),
                                          'fastxtend.callback.utils.LogDispatch': ( 'callback.utils.html#logdispatch',
                                                                                    'fastxtend/callback/utils.py'),
                                          'fastxtend.callback.utils.LogDispatch._log_tensorboard': ( 'callback.utils.html#logdispatch._log_tensorboard',
                                                                                                     'fastxtend/callback/utils.py'),
                                          'fastxtend.callback.utils.LogDispatch._log_wandb': ( 'callback.utils.html#logdispatch._log_wandb',
                                                                                               'fastxtend/callback/utils.py'),
                                          'fastxtend.callback.utils.LogDispatch._update_dict': ( 'callback.utils.html#logdispatch._update_dict',
                                                                                                 'fastxtend/callback/utils.py'),
                                          'fastxtend.callback.utils.LogDispatch._update_values': ( 'callback.utils.html#logdispatch._update_values',
                                                                                                   'fastxtend/callback/utils.py'),
                                          'fastxtend.callback.utils.LogDispatch.after_batch': ( 'callback.utils.html#logdispatch.after_batch',
                                                                                                'fastxtend/callback/utils.py'),
                                          'fastxtend.callback.utils.LogDispatch.after_epoch': ( 'callback.utils.html#logdispatch.after_epoch',
                                                                                                'fastxtend/callback/utils.py'),
                                          'fastxtend.callback.utils.LogDispatch.before_fit': ( 'callback.utils.html#logdispatch.before_fit',
                                                                                               'fastxtend/callback/utils.py'),
                                          'fastxtend.callback.utils.LogDispatch.log_wandb_summary': ( 'callback.utils.html#logdispatch.log_wandb_summary',
                                                                                                      'fastxtend/callback/utils.py'),
                                          'fastxtend.callback.utils.LogDispatch.log_wandb_table': ( 'callback.utils.html#logdispatch.log_wandb_table',
                                                                                                    'fastxtend/callback/utils.py')},
            'fastxtend.data.all': {},
            'fastxtend.data.loader': { 'fastxtend.data.loader.BaseLoader': ('data.loader.html#baseloader', 'fastxtend/data/loader.py'),
                                       'fastxtend.data.loader.BaseLoader.__init__': ( 'data.loader.html#baseloader.__init__',
                                                                                      'fastxtend/data/loader.py'),
                                       'fastxtend.data.loader.BaseLoader.after_batch': ( 'data.loader.html#baseloader.after_batch',
                                                                                         'fastxtend/data/loader.py'),
                                       'fastxtend.data.loader.BaseLoader.after_iter': ( 'data.loader.html#baseloader.after_iter',
                                                                                        'fastxtend/data/loader.py'),
                                       'fastxtend.data.loader.BaseLoader.before_iter': ( 'data.loader.html#baseloader.before_iter',
                                                                                         'fastxtend/data/loader.py'),
                                       'fastxtend.data.loader.DataLoaderMixin': ( 'data.loader.html#dataloadermixin',
                                                                                  'fastxtend/data/loader.py'),
                                       'fastxtend.data.loader.DataLoaderMixin.__init__': ( 'data.loader.html#dataloadermixin.__init__',
                                                                                           'fastxtend/data/loader.py'),
                                       'fastxtend.data.loader.DataLoaderMixin.__iter__': ( 'data.loader.html#dataloadermixin.__iter__',
                                                                                           'fastxtend/data/loader.py'),
                                       'fastxtend.data.loader.DataLoaderMixin._callback_warning': ( 'data.loader.html#dataloadermixin._callback_warning',
                                                                                                    'fastxtend/data/loader.py'),
                                       'fastxtend.data.loader.DataLoaderMixin._decode_batch': ( 'data.loader.html#dataloadermixin._decode_batch',
                                                                                                'fastxtend/data/loader.py'),
                                       'fastxtend.data.loader.DataLoaderMixin._one_pass': ( 'data.loader.html#dataloadermixin._one_pass',
                                                                                            'fastxtend/data/loader.py'),
                                       'fastxtend.data.loader.DataLoaderMixin._pipeline_device': ( 'data.loader.html#dataloadermixin._pipeline_device',
                                                                                                   'fastxtend/data/loader.py'),
                                       'fastxtend.data.loader.DataLoaderMixin._pre_show_batch': ( 'data.loader.html#dataloadermixin._pre_show_batch',
                                                                                                  'fastxtend/data/loader.py'),
                                       'fastxtend.data.loader.DataLoaderMixin._retain_dl': ( 'data.loader.html#dataloadermixin._retain_dl',
                                                                                             'fastxtend/data/loader.py'),
                                       'fastxtend.data.loader.DataLoaderMixin.bs': ( 'data.loader.html#dataloadermixin.bs',
                                                                                     'fastxtend/data/loader.py'),
                                       'fastxtend.data.loader.DataLoaderMixin.decode': ( 'data.loader.html#dataloadermixin.decode',
                                                                                         'fastxtend/data/loader.py'),
                                       'fastxtend.data.loader.DataLoaderMixin.decode_batch': ( 'data.loader.html#dataloadermixin.decode_batch',
                                                                                               'fastxtend/data/loader.py'),
                                       'fastxtend.data.loader.DataLoaderMixin.device': ( 'data.loader.html#dataloadermixin.device',
                                                                                         'fastxtend/data/loader.py'),
                                       'fastxtend.data.loader.DataLoaderMixin.n_inp': ( 'data.loader.html#dataloadermixin.n_inp',
                                                                                        'fastxtend/data/loader.py'),
                                       'fastxtend.data.loader.DataLoaderMixin.one_batch': ( 'data.loader.html#dataloadermixin.one_batch',
                                                                                            'fastxtend/data/loader.py'),
                                       'fastxtend.data.loader.DataLoaderMixin.show_batch': ( 'data.loader.html#dataloadermixin.show_batch',
                                                                                             'fastxtend/data/loader.py'),
                                       'fastxtend.data.loader.DataLoaderMixin.show_results': ( 'data.loader.html#dataloadermixin.show_results',
                                                                                               'fastxtend/data/loader.py'),
                                       'fastxtend.data.loader.DataLoaderMixin.split_idx': ( 'data.loader.html#dataloadermixin.split_idx',
                                                                                            'fastxtend/data/loader.py'),
                                       'fastxtend.data.loader.DataLoaderMixin.to': ( 'data.loader.html#dataloadermixin.to',
                                                                                     'fastxtend/data/loader.py')},
            'fastxtend.data.transforms': { 'fastxtend.data.transforms.GreatGrandparentSplitter': ( 'data.transforms.html#greatgrandparentsplitter',
                                                                                                   'fastxtend/data/transforms.py'),
                                           'fastxtend.data.transforms.KFoldColSplitter': ( 'data.transforms.html#kfoldcolsplitter',
                                                                                           'fastxtend/data/transforms.py'),
                                           'fastxtend.data.transforms.ParentSplitter': ( 'data.transforms.html#parentsplitter',
                                                                                         'fastxtend/data/transforms.py'),
                                           'fastxtend.data.transforms._greatgrandparent_idxs': ( 'data.transforms.html#_greatgrandparent_idxs',
                                                                                                 'fastxtend/data/transforms.py'),
                                           'fastxtend.data.transforms._parent_idxs': ( 'data.transforms.html#_parent_idxs',
                                                                                       'fastxtend/data/transforms.py')},
            'fastxtend.ffcv.all': {},
            'fastxtend.ffcv.epoch_iterator': { 'fastxtend.ffcv.epoch_iterator.AsyncEpochIterator': ( 'ffcv.epoch_iterator.html#asyncepochiterator',
                                                                                                     'fastxtend/ffcv/epoch_iterator.py'),
                                               'fastxtend.ffcv.epoch_iterator.AsyncEpochIterator.__init__': ( 'ffcv.epoch_iterator.html#asyncepochiterator.__init__',
                                                                                                              'fastxtend/ffcv/epoch_iterator.py'),
                                               'fastxtend.ffcv.epoch_iterator.AsyncEpochIterator.close': ( 'ffcv.epoch_iterator.html#asyncepochiterator.close',
                                                                                                           'fastxtend/ffcv/epoch_iterator.py'),
                                               'fastxtend.ffcv.epoch_iterator.AsyncEpochIterator.run_pipeline': ( 'ffcv.epoch_iterator.html#asyncepochiterator.run_pipeline',
                                                                                                                  'fastxtend/ffcv/epoch_iterator.py'),
                                               'fastxtend.ffcv.epoch_iterator.EpochIterator': ( 'ffcv.epoch_iterator.html#epochiterator',
                                                                                                'fastxtend/ffcv/epoch_iterator.py'),
                                               'fastxtend.ffcv.epoch_iterator.EpochIterator.__init__': ( 'ffcv.epoch_iterator.html#epochiterator.__init__',
                                                                                                         'fastxtend/ffcv/epoch_iterator.py')},
            'fastxtend.ffcv.fields': { 'fastxtend.ffcv.fields.RGBImageField': ( 'ffcv.fields.html#rgbimagefield',
                                                                                'fastxtend/ffcv/fields.py'),
                                       'fastxtend.ffcv.fields.RGBImageField.__init__': ( 'ffcv.fields.html#rgbimagefield.__init__',
                                                                                         'fastxtend/ffcv/fields.py'),
                                       'fastxtend.ffcv.fields.RGBImageField.encode': ( 'ffcv.fields.html#rgbimagefield.encode',
                                                                                       'fastxtend/ffcv/fields.py'),
                                       'fastxtend.ffcv.fields.resizer': ('ffcv.fields.html#resizer', 'fastxtend/ffcv/fields.py')},
            'fastxtend.ffcv.fx': {},
            'fastxtend.ffcv.inference': { 'fastxtend.ffcv.inference.FFAIBase': ( 'ffcv.inference.html#ffaibase',
                                                                                 'fastxtend/ffcv/inference.py'),
                                          'fastxtend.ffcv.inference.FFAIBase.__array_finalize__': ( 'ffcv.inference.html#ffaibase.__array_finalize__',
                                                                                                    'fastxtend/ffcv/inference.py'),
                                          'fastxtend.ffcv.inference.FFAIBase.__new__': ( 'ffcv.inference.html#ffaibase.__new__',
                                                                                         'fastxtend/ffcv/inference.py'),
                                          'fastxtend.ffcv.inference.FFAIBase.__repr__': ( 'ffcv.inference.html#ffaibase.__repr__',
                                                                                          'fastxtend/ffcv/inference.py'),
                                          'fastxtend.ffcv.inference.FFAIBase.create': ( 'ffcv.inference.html#ffaibase.create',
                                                                                        'fastxtend/ffcv/inference.py'),
                                          'fastxtend.ffcv.inference.FFAIBase.show': ( 'ffcv.inference.html#ffaibase.show',
                                                                                      'fastxtend/ffcv/inference.py'),
                                          'fastxtend.ffcv.inference.FFAICenterCrop': ( 'ffcv.inference.html#ffaicentercrop',
                                                                                       'fastxtend/ffcv/inference.py'),
                                          'fastxtend.ffcv.inference.FFAICenterCrop.__init__': ( 'ffcv.inference.html#ffaicentercrop.__init__',
                                                                                                'fastxtend/ffcv/inference.py'),
                                          'fastxtend.ffcv.inference.FFAICenterCrop.encodes': ( 'ffcv.inference.html#ffaicentercrop.encodes',
                                                                                               'fastxtend/ffcv/inference.py'),
                                          'fastxtend.ffcv.inference.FFAIImage': ( 'ffcv.inference.html#ffaiimage',
                                                                                  'fastxtend/ffcv/inference.py'),
                                          'fastxtend.ffcv.inference.FFAIImageBW': ( 'ffcv.inference.html#ffaiimagebw',
                                                                                    'fastxtend/ffcv/inference.py'),
                                          'fastxtend.ffcv.inference.FFAIImageBlock': ( 'ffcv.inference.html#ffaiimageblock',
                                                                                       'fastxtend/ffcv/inference.py'),
                                          'fastxtend.ffcv.inference.FFAIMask': ( 'ffcv.inference.html#ffaimask',
                                                                                 'fastxtend/ffcv/inference.py'),
                                          'fastxtend.ffcv.inference.encodes': ( 'ffcv.inference.html#encodes',
                                                                                'fastxtend/ffcv/inference.py'),
                                          'fastxtend.ffcv.inference.get_center_crop': ( 'ffcv.inference.html#get_center_crop',
                                                                                        'fastxtend/ffcv/inference.py'),
                                          'fastxtend.ffcv.inference.load_image': ( 'ffcv.inference.html#load_image',
                                                                                   'fastxtend/ffcv/inference.py')},
            'fastxtend.ffcv.loader': { 'fastxtend.ffcv.loader.Loader': ('ffcv.loader.html#loader', 'fastxtend/ffcv/loader.py'),
                                       'fastxtend.ffcv.loader.Loader.__init__': ( 'ffcv.loader.html#loader.__init__',
                                                                                  'fastxtend/ffcv/loader.py'),
                                       'fastxtend.ffcv.loader.Loader.__iter__': ( 'ffcv.loader.html#loader.__iter__',
                                                                                  'fastxtend/ffcv/loader.py'),
                                       'fastxtend.ffcv.loader.Loader._callback_warning': ( 'ffcv.loader.html#loader._callback_warning',
                                                                                           'fastxtend/ffcv/loader.py'),
                                       'fastxtend.ffcv.loader.Loader._iter': ('ffcv.loader.html#loader._iter', 'fastxtend/ffcv/loader.py'),
                                       'fastxtend.ffcv.loader.Loader._n_batches': ( 'ffcv.loader.html#loader._n_batches',
                                                                                    'fastxtend/ffcv/loader.py'),
                                       'fastxtend.ffcv.loader.Loader.bs': ('ffcv.loader.html#loader.bs', 'fastxtend/ffcv/loader.py'),
                                       'fastxtend.ffcv.loader.Loader.device': ( 'ffcv.loader.html#loader.device',
                                                                                'fastxtend/ffcv/loader.py'),
                                       'fastxtend.ffcv.loader.Loader.one_batch': ( 'ffcv.loader.html#loader.one_batch',
                                                                                   'fastxtend/ffcv/loader.py')},
            'fastxtend.ffcv.operations': { 'fastxtend.ffcv.operations.ToDevice': ( 'ffcv.operations.html#todevice',
                                                                                   'fastxtend/ffcv/operations.py'),
                                           'fastxtend.ffcv.operations.ToDevice.__init__': ( 'ffcv.operations.html#todevice.__init__',
                                                                                            'fastxtend/ffcv/operations.py'),
                                           'fastxtend.ffcv.operations.ToDevice.generate_code': ( 'ffcv.operations.html#todevice.generate_code',
                                                                                                 'fastxtend/ffcv/operations.py'),
                                           'fastxtend.ffcv.operations.ToTensorBase': ( 'ffcv.operations.html#totensorbase',
                                                                                       'fastxtend/ffcv/operations.py'),
                                           'fastxtend.ffcv.operations.ToTensorBase.__init__': ( 'ffcv.operations.html#totensorbase.__init__',
                                                                                                'fastxtend/ffcv/operations.py'),
                                           'fastxtend.ffcv.operations.ToTensorBase.declare_state_and_memory': ( 'ffcv.operations.html#totensorbase.declare_state_and_memory',
                                                                                                                'fastxtend/ffcv/operations.py'),
                                           'fastxtend.ffcv.operations.ToTensorBase.generate_code': ( 'ffcv.operations.html#totensorbase.generate_code',
                                                                                                     'fastxtend/ffcv/operations.py'),
                                           'fastxtend.ffcv.operations.ToTensorCategory': ( 'ffcv.operations.html#totensorcategory',
                                                                                           'fastxtend/ffcv/operations.py'),
                                           'fastxtend.ffcv.operations.ToTensorCategory.__init__': ( 'ffcv.operations.html#totensorcategory.__init__',
                                                                                                    'fastxtend/ffcv/operations.py'),
                                           'fastxtend.ffcv.operations.ToTensorImage': ( 'ffcv.operations.html#totensorimage',
                                                                                        'fastxtend/ffcv/operations.py'),
                                           'fastxtend.ffcv.operations.ToTensorImage.__init__': ( 'ffcv.operations.html#totensorimage.__init__',
                                                                                                 'fastxtend/ffcv/operations.py'),
                                           'fastxtend.ffcv.operations.ToTensorImage.generate_code': ( 'ffcv.operations.html#totensorimage.generate_code',
                                                                                                      'fastxtend/ffcv/operations.py'),
                                           'fastxtend.ffcv.operations.ToTensorImageBW': ( 'ffcv.operations.html#totensorimagebw',
                                                                                          'fastxtend/ffcv/operations.py'),
                                           'fastxtend.ffcv.operations.ToTensorImageBW.__init__': ( 'ffcv.operations.html#totensorimagebw.__init__',
                                                                                                   'fastxtend/ffcv/operations.py'),
                                           'fastxtend.ffcv.operations.ToTensorMask': ( 'ffcv.operations.html#totensormask',
                                                                                       'fastxtend/ffcv/operations.py'),
                                           'fastxtend.ffcv.operations.ToTensorMask.__init__': ( 'ffcv.operations.html#totensormask.__init__',
                                                                                                'fastxtend/ffcv/operations.py'),
                                           'fastxtend.ffcv.operations.ToTensorMultiCategory': ( 'ffcv.operations.html#totensormulticategory',
                                                                                                'fastxtend/ffcv/operations.py'),
                                           'fastxtend.ffcv.operations.ToTensorMultiCategory.__init__': ( 'ffcv.operations.html#totensormulticategory.__init__',
                                                                                                         'fastxtend/ffcv/operations.py'),
                                           'fastxtend.ffcv.operations.ToTensorTitledTensorScalar': ( 'ffcv.operations.html#totensortitledtensorscalar',
                                                                                                     'fastxtend/ffcv/operations.py'),
                                           'fastxtend.ffcv.operations.ToTensorTitledTensorScalar.__init__': ( 'ffcv.operations.html#totensortitledtensorscalar.__init__',
                                                                                                              'fastxtend/ffcv/operations.py')},
            'fastxtend.ffcv.transforms': { 'fastxtend.ffcv.transforms.GrayscaleType': ( 'ffcv.transforms.html#grayscaletype',
                                                                                        'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomBrightness': ( 'ffcv.transforms.html#randombrightness',
                                                                                           'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomBrightness.__init__': ( 'ffcv.transforms.html#randombrightness.__init__',
                                                                                                    'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomBrightness.declare_state_and_memory': ( 'ffcv.transforms.html#randombrightness.declare_state_and_memory',
                                                                                                                    'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomBrightness.generate_code': ( 'ffcv.transforms.html#randombrightness.generate_code',
                                                                                                         'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomBrightness.logit': ( 'ffcv.transforms.html#randombrightness.logit',
                                                                                                 'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomChannelDrop': ( 'ffcv.transforms.html#randomchanneldrop',
                                                                                            'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomChannelDrop.__init__': ( 'ffcv.transforms.html#randomchanneldrop.__init__',
                                                                                                     'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomChannelDrop.declare_state_and_memory': ( 'ffcv.transforms.html#randomchanneldrop.declare_state_and_memory',
                                                                                                                     'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomChannelDrop.generate_code': ( 'ffcv.transforms.html#randomchanneldrop.generate_code',
                                                                                                          'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomContrast': ( 'ffcv.transforms.html#randomcontrast',
                                                                                         'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomContrast.__init__': ( 'ffcv.transforms.html#randomcontrast.__init__',
                                                                                                  'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomContrast.declare_state_and_memory': ( 'ffcv.transforms.html#randomcontrast.declare_state_and_memory',
                                                                                                                  'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomContrast.generate_code': ( 'ffcv.transforms.html#randomcontrast.generate_code',
                                                                                                       'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomContrast.logit': ( 'ffcv.transforms.html#randomcontrast.logit',
                                                                                               'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomCutout': ( 'ffcv.transforms.html#randomcutout',
                                                                                       'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomCutout.__init__': ( 'ffcv.transforms.html#randomcutout.__init__',
                                                                                                'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomCutout.generate_code': ( 'ffcv.transforms.html#randomcutout.generate_code',
                                                                                                     'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomErasing': ( 'ffcv.transforms.html#randomerasing',
                                                                                        'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomErasing.__init__': ( 'ffcv.transforms.html#randomerasing.__init__',
                                                                                                 'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomErasing.declare_state_and_memory': ( 'ffcv.transforms.html#randomerasing.declare_state_and_memory',
                                                                                                                 'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomErasing.generate_code': ( 'ffcv.transforms.html#randomerasing.generate_code',
                                                                                                      'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomGrayscale': ( 'ffcv.transforms.html#randomgrayscale',
                                                                                          'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomGrayscale.__init__': ( 'ffcv.transforms.html#randomgrayscale.__init__',
                                                                                                   'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomGrayscale.declare_state_and_memory': ( 'ffcv.transforms.html#randomgrayscale.declare_state_and_memory',
                                                                                                                   'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomGrayscale.generate_code': ( 'ffcv.transforms.html#randomgrayscale.generate_code',
                                                                                                        'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomHorizontalFlip': ( 'ffcv.transforms.html#randomhorizontalflip',
                                                                                               'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomHorizontalFlip.__init__': ( 'ffcv.transforms.html#randomhorizontalflip.__init__',
                                                                                                        'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomHue': ( 'ffcv.transforms.html#randomhue',
                                                                                    'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomHue.__init__': ( 'ffcv.transforms.html#randomhue.__init__',
                                                                                             'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomHue.declare_state_and_memory': ( 'ffcv.transforms.html#randomhue.declare_state_and_memory',
                                                                                                             'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomHue.generate_code': ( 'ffcv.transforms.html#randomhue.generate_code',
                                                                                                  'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomLighting': ( 'ffcv.transforms.html#randomlighting',
                                                                                         'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomLighting.__init__': ( 'ffcv.transforms.html#randomlighting.__init__',
                                                                                                  'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomLighting.declare_state_and_memory': ( 'ffcv.transforms.html#randomlighting.declare_state_and_memory',
                                                                                                                  'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomLighting.generate_code': ( 'ffcv.transforms.html#randomlighting.generate_code',
                                                                                                       'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomLighting.logit': ( 'ffcv.transforms.html#randomlighting.logit',
                                                                                               'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomSaturation': ( 'ffcv.transforms.html#randomsaturation',
                                                                                           'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomSaturation.__init__': ( 'ffcv.transforms.html#randomsaturation.__init__',
                                                                                                    'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomSaturation.declare_state_and_memory': ( 'ffcv.transforms.html#randomsaturation.declare_state_and_memory',
                                                                                                                    'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomSaturation.generate_code': ( 'ffcv.transforms.html#randomsaturation.generate_code',
                                                                                                         'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomSaturation.logit': ( 'ffcv.transforms.html#randomsaturation.logit',
                                                                                                 'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomTranslate': ( 'ffcv.transforms.html#randomtranslate',
                                                                                          'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomTranslate.__init__': ( 'ffcv.transforms.html#randomtranslate.__init__',
                                                                                                   'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.RandomTranslate.generate_code': ( 'ffcv.transforms.html#randomtranslate.generate_code',
                                                                                                        'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.Translate': ( 'ffcv.transforms.html#translate',
                                                                                    'fastxtend/ffcv/transforms.py'),
                                           'fastxtend.ffcv.transforms.Translate.__init__': ( 'ffcv.transforms.html#translate.__init__',
                                                                                             'fastxtend/ffcv/transforms.py')},
            'fastxtend.ffcv.utils': { 'fastxtend.ffcv.utils.LabelField': ('ffcv.utils.html#labelfield', 'fastxtend/ffcv/utils.py'),
                                      'fastxtend.ffcv.utils.rgb_dataset_to_ffcv': ( 'ffcv.utils.html#rgb_dataset_to_ffcv',
                                                                                    'fastxtend/ffcv/utils.py')},
            'fastxtend.ffcv.writer': { 'fastxtend.ffcv.writer.DatasetWriter': ( 'ffcv.writer.html#datasetwriter',
                                                                                'fastxtend/ffcv/writer.py'),
                                       'fastxtend.ffcv.writer.DatasetWriter.__init__': ( 'ffcv.writer.html#datasetwriter.__init__',
                                                                                         'fastxtend/ffcv/writer.py'),
                                       'fastxtend.ffcv.writer.DatasetWriter.prepare': ( 'ffcv.writer.html#datasetwriter.prepare',
                                                                                        'fastxtend/ffcv/writer.py')},
            'fastxtend.imports': {},
            'fastxtend.losses': { 'fastxtend.losses.BCEWithLogitsLoss': ('losses.html#bcewithlogitsloss', 'fastxtend/losses.py'),
                                  'fastxtend.losses.BCEWithLogitsLoss.__init__': ( 'losses.html#bcewithlogitsloss.__init__',
                                                                                   'fastxtend/losses.py'),
                                  'fastxtend.losses.BCEWithLogitsLoss.activation': ( 'losses.html#bcewithlogitsloss.activation',
                                                                                     'fastxtend/losses.py'),
                                  'fastxtend.losses.BCEWithLogitsLoss.decodes': ( 'losses.html#bcewithlogitsloss.decodes',
                                                                                  'fastxtend/losses.py'),
                                  'fastxtend.losses.BCEWithLogitsLoss.forward': ( 'losses.html#bcewithlogitsloss.forward',
                                                                                  'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalanced': ('losses.html#classbalanced', 'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalanced.__init__': ('losses.html#classbalanced.__init__', 'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalanced.to': ('losses.html#classbalanced.to', 'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalancedBCEWithLogitsLoss': ( 'losses.html#classbalancedbcewithlogitsloss',
                                                                                       'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalancedBCEWithLogitsLoss.__init__': ( 'losses.html#classbalancedbcewithlogitsloss.__init__',
                                                                                                'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalancedBCEWithLogitsLoss.activation': ( 'losses.html#classbalancedbcewithlogitsloss.activation',
                                                                                                  'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalancedBCEWithLogitsLoss.decodes': ( 'losses.html#classbalancedbcewithlogitsloss.decodes',
                                                                                               'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalancedBCEWithLogitsLoss.forward': ( 'losses.html#classbalancedbcewithlogitsloss.forward',
                                                                                               'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalancedCrossEntropyLoss': ( 'losses.html#classbalancedcrossentropyloss',
                                                                                      'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalancedCrossEntropyLoss.__init__': ( 'losses.html#classbalancedcrossentropyloss.__init__',
                                                                                               'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalancedCrossEntropyLoss.activation': ( 'losses.html#classbalancedcrossentropyloss.activation',
                                                                                                 'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalancedCrossEntropyLoss.decodes': ( 'losses.html#classbalancedcrossentropyloss.decodes',
                                                                                              'fastxtend/losses.py'),
                                  'fastxtend.losses.ClassBalancedCrossEntropyLoss.forward': ( 'losses.html#classbalancedcrossentropyloss.forward',
                                                                                              'fastxtend/losses.py')},
            'fastxtend.metrics': { 'fastxtend.metrics.APScoreBinary': ('metrics.html#apscorebinary', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.APScoreMulti': ('metrics.html#apscoremulti', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AccumMetricX': ('metrics.html#accummetricx', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AccumMetricX.__call__': ( 'metrics.html#accummetricx.__call__',
                                                                                'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AccumMetricX.__init__': ( 'metrics.html#accummetricx.__init__',
                                                                                'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AccumMetricX.accum_values': ( 'metrics.html#accummetricx.accum_values',
                                                                                    'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AccumMetricX.accumulate': ( 'metrics.html#accummetricx.accumulate',
                                                                                  'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AccumMetricX.reset': ('metrics.html#accummetricx.reset', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AccumMetricX.value': ('metrics.html#accummetricx.value', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Accuracy': ('metrics.html#accuracy', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AccuracyMulti': ('metrics.html#accuracymulti', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.ActivationType': ('metrics.html#activationtype', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgLossX': ('metrics.html#avglossx', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgLossX.accumulate': ('metrics.html#avglossx.accumulate', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgLossX.reset': ('metrics.html#avglossx.reset', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgLossX.value': ('metrics.html#avglossx.value', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgMetricX': ('metrics.html#avgmetricx', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgMetricX.__init__': ('metrics.html#avgmetricx.__init__', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgMetricX.accumulate': ( 'metrics.html#avgmetricx.accumulate',
                                                                                'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgMetricX.reset': ('metrics.html#avgmetricx.reset', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgMetricX.value': ('metrics.html#avgmetricx.value', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgSmoothLossX': ('metrics.html#avgsmoothlossx', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgSmoothLossX.__init__': ( 'metrics.html#avgsmoothlossx.__init__',
                                                                                  'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgSmoothLossX.accumulate': ( 'metrics.html#avgsmoothlossx.accumulate',
                                                                                    'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgSmoothLossX.reset': ('metrics.html#avgsmoothlossx.reset', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgSmoothLossX.value': ('metrics.html#avgsmoothlossx.value', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgSmoothMetricX': ('metrics.html#avgsmoothmetricx', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgSmoothMetricX.__init__': ( 'metrics.html#avgsmoothmetricx.__init__',
                                                                                    'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgSmoothMetricX.accumulate': ( 'metrics.html#avgsmoothmetricx.accumulate',
                                                                                      'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgSmoothMetricX.reset': ( 'metrics.html#avgsmoothmetricx.reset',
                                                                                 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.AvgSmoothMetricX.value': ( 'metrics.html#avgsmoothmetricx.value',
                                                                                 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.BalancedAccuracy': ('metrics.html#balancedaccuracy', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.BrierScore': ('metrics.html#brierscore', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.BrierScoreMulti': ('metrics.html#brierscoremulti', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.CohenKappa': ('metrics.html#cohenkappa', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.CorpusBLEUMetric': ('metrics.html#corpusbleumetric', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.CorpusBLEUMetric.NGram': ( 'metrics.html#corpusbleumetric.ngram',
                                                                                 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.CorpusBLEUMetric.__init__': ( 'metrics.html#corpusbleumetric.__init__',
                                                                                    'fastxtend/metrics.py'),
                                   'fastxtend.metrics.CorpusBLEUMetric.accumulate': ( 'metrics.html#corpusbleumetric.accumulate',
                                                                                      'fastxtend/metrics.py'),
                                   'fastxtend.metrics.CorpusBLEUMetric.get_correct_ngrams': ( 'metrics.html#corpusbleumetric.get_correct_ngrams',
                                                                                              'fastxtend/metrics.py'),
                                   'fastxtend.metrics.CorpusBLEUMetric.get_grams': ( 'metrics.html#corpusbleumetric.get_grams',
                                                                                     'fastxtend/metrics.py'),
                                   'fastxtend.metrics.CorpusBLEUMetric.reset': ( 'metrics.html#corpusbleumetric.reset',
                                                                                 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.CorpusBLEUMetric.value': ( 'metrics.html#corpusbleumetric.value',
                                                                                 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Dice': ('metrics.html#dice', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Dice.__init__': ('metrics.html#dice.__init__', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Dice.accumulate': ('metrics.html#dice.accumulate', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Dice.reset': ('metrics.html#dice.reset', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Dice.value': ('metrics.html#dice.value', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.DiceMulti': ('metrics.html#dicemulti', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.DiceMulti.__init__': ('metrics.html#dicemulti.__init__', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.DiceMulti.accumulate': ('metrics.html#dicemulti.accumulate', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.DiceMulti.reset': ('metrics.html#dicemulti.reset', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.DiceMulti.value': ('metrics.html#dicemulti.value', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.ErrorRate': ('metrics.html#errorrate', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.ExpRMSE': ('metrics.html#exprmse', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.ExplainedVariance': ('metrics.html#explainedvariance', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.F1Score': ('metrics.html#f1score', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.F1ScoreMulti': ('metrics.html#f1scoremulti', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.FBeta': ('metrics.html#fbeta', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.FBetaMulti': ('metrics.html#fbetamulti', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.ForegroundAcc': ('metrics.html#foregroundacc', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.HammingLoss': ('metrics.html#hammingloss', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.HammingLossMulti': ('metrics.html#hamminglossmulti', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Jaccard': ('metrics.html#jaccard', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.JaccardCoeff': ('metrics.html#jaccardcoeff', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.JaccardCoeff.value': ('metrics.html#jaccardcoeff.value', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.JaccardMulti': ('metrics.html#jaccardmulti', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.LogMetric': ('metrics.html#logmetric', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.LossMetric': ('metrics.html#lossmetric', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.LossMetric.__init__': ('metrics.html#lossmetric.__init__', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.LossMetric.accumulate': ( 'metrics.html#lossmetric.accumulate',
                                                                                'fastxtend/metrics.py'),
                                   'fastxtend.metrics.LossMetric.name': ('metrics.html#lossmetric.name', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.LossMetrics': ('metrics.html#lossmetrics', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MAE': ('metrics.html#mae', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MSE': ('metrics.html#mse', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MSLE': ('metrics.html#msle', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MatthewsCorrCoef': ('metrics.html#matthewscorrcoef', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MatthewsCorrCoefMulti': ( 'metrics.html#matthewscorrcoefmulti',
                                                                                'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MetricType': ('metrics.html#metrictype', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MetricX': ('metrics.html#metricx', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MetricX.__init__': ('metrics.html#metricx.__init__', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MetricX._split_kwargs': ( 'metrics.html#metricx._split_kwargs',
                                                                                'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MetricX.accumulate': ('metrics.html#metricx.accumulate', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MetricX.name': ('metrics.html#metricx.name', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MetricX.reset': ('metrics.html#metricx.reset', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.MetricX.value': ('metrics.html#metricx.value', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.PearsonCorrCoef': ('metrics.html#pearsoncorrcoef', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Perplexity': ('metrics.html#perplexity', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Perplexity.name': ('metrics.html#perplexity.name', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Perplexity.value': ('metrics.html#perplexity.value', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Precision': ('metrics.html#precision', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.PrecisionMulti': ('metrics.html#precisionmulti', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.R2Score': ('metrics.html#r2score', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.RMSE': ('metrics.html#rmse', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Recall': ('metrics.html#recall', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.RecallMulti': ('metrics.html#recallmulti', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Recorder.__init__': ('metrics.html#recorder.__init__', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Recorder.after_batch': ('metrics.html#recorder.after_batch', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Recorder.after_epoch': ('metrics.html#recorder.after_epoch', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Recorder.after_train': ('metrics.html#recorder.after_train', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Recorder.after_validate': ( 'metrics.html#recorder.after_validate',
                                                                                  'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Recorder.before_epoch': ( 'metrics.html#recorder.before_epoch',
                                                                                'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Recorder.before_fit': ('metrics.html#recorder.before_fit', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Recorder.before_train': ( 'metrics.html#recorder.before_train',
                                                                                'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Recorder.before_validate': ( 'metrics.html#recorder.before_validate',
                                                                                   'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Recorder.train_mets': ('metrics.html#recorder.train_mets', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.Recorder.valid_mets': ('metrics.html#recorder.valid_mets', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.RocAuc': ('metrics.html#rocauc', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.RocAucBinary': ('metrics.html#rocaucbinary', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.RocAucMulti': ('metrics.html#rocaucmulti', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.SpearmanCorrCoef': ('metrics.html#spearmancorrcoef', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.TopKAccuracy': ('metrics.html#topkaccuracy', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.ValueMetricX': ('metrics.html#valuemetricx', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.ValueMetricX.__init__': ( 'metrics.html#valuemetricx.__init__',
                                                                                'fastxtend/metrics.py'),
                                   'fastxtend.metrics.ValueMetricX.value': ('metrics.html#valuemetricx.value', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics._dedup_metric_names': ('metrics.html#_dedup_metric_names', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.accuracy': ('metrics.html#accuracy', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.accuracy_multi': ('metrics.html#accuracy_multi', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.error_rate': ('metrics.html#error_rate', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.exp_rmspe': ('metrics.html#exp_rmspe', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.foreground_acc': ('metrics.html#foreground_acc', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.func_to_metric': ('metrics.html#func_to_metric', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.mae': ('metrics.html#mae', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.mse': ('metrics.html#mse', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.msle': ('metrics.html#msle', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.rmse': ('metrics.html#rmse', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.skm_to_fastxtend': ('metrics.html#skm_to_fastxtend', 'fastxtend/metrics.py'),
                                   'fastxtend.metrics.top_k_accuracy': ('metrics.html#top_k_accuracy', 'fastxtend/metrics.py')},
            'fastxtend.multiloss': { 'fastxtend.multiloss.MixHandlerX': ('multiloss.html#mixhandlerx', 'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MixHandlerX.__init__': ( 'multiloss.html#mixhandlerx.__init__',
                                                                                   'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MixHandlerX.after_cancel_fit': ( 'multiloss.html#mixhandlerx.after_cancel_fit',
                                                                                           'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MixHandlerX.after_cancel_train': ( 'multiloss.html#mixhandlerx.after_cancel_train',
                                                                                             'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MixHandlerX.after_train': ( 'multiloss.html#mixhandlerx.after_train',
                                                                                      'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MixHandlerX.before_fit': ( 'multiloss.html#mixhandlerx.before_fit',
                                                                                     'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MixHandlerX.before_train': ( 'multiloss.html#mixhandlerx.before_train',
                                                                                       'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MixHandlerX.multi_lf': ( 'multiloss.html#mixhandlerx.multi_lf',
                                                                                   'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MixHandlerX.solo_lf': ( 'multiloss.html#mixhandlerx.solo_lf',
                                                                                  'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiAvgLoss': ('multiloss.html#multiavgloss', 'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiAvgLoss.__init__': ( 'multiloss.html#multiavgloss.__init__',
                                                                                    'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiAvgLoss.accumulate': ( 'multiloss.html#multiavgloss.accumulate',
                                                                                      'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiAvgSmoothLoss': ( 'multiloss.html#multiavgsmoothloss',
                                                                                 'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiAvgSmoothLoss.__init__': ( 'multiloss.html#multiavgsmoothloss.__init__',
                                                                                          'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiAvgSmoothLoss.accumulate': ( 'multiloss.html#multiavgsmoothloss.accumulate',
                                                                                            'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiAvgSmoothLossMixup': ( 'multiloss.html#multiavgsmoothlossmixup',
                                                                                      'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiAvgSmoothLossMixup.__init__': ( 'multiloss.html#multiavgsmoothlossmixup.__init__',
                                                                                               'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiAvgSmoothLossMixup.accumulate': ( 'multiloss.html#multiavgsmoothlossmixup.accumulate',
                                                                                                 'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiLoss': ('multiloss.html#multiloss', 'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiLoss.__init__': ( 'multiloss.html#multiloss.__init__',
                                                                                 'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiLoss.activation': ( 'multiloss.html#multiloss.activation',
                                                                                   'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiLoss.decodes': ( 'multiloss.html#multiloss.decodes',
                                                                                'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiLoss.forward': ( 'multiloss.html#multiloss.forward',
                                                                                'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiLoss.forward_mixup': ( 'multiloss.html#multiloss.forward_mixup',
                                                                                      'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiLoss.losses': ('multiloss.html#multiloss.losses', 'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiLoss.reduction': ( 'multiloss.html#multiloss.reduction',
                                                                                  'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiLoss.to': ('multiloss.html#multiloss.to', 'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiLossCallback': ( 'multiloss.html#multilosscallback',
                                                                                'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiLossCallback.__init__': ( 'multiloss.html#multilosscallback.__init__',
                                                                                         'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiLossCallback.before_fit': ( 'multiloss.html#multilosscallback.before_fit',
                                                                                           'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiTargetLoss': ('multiloss.html#multitargetloss', 'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiTargetLoss.__init__': ( 'multiloss.html#multitargetloss.__init__',
                                                                                       'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiTargetLoss.activation': ( 'multiloss.html#multitargetloss.activation',
                                                                                         'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiTargetLoss.decodes': ( 'multiloss.html#multitargetloss.decodes',
                                                                                      'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiTargetLoss.forward': ( 'multiloss.html#multitargetloss.forward',
                                                                                      'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.MultiTargetLoss.forward_mixup': ( 'multiloss.html#multitargetloss.forward_mixup',
                                                                                            'fastxtend/multiloss.py'),
                                     'fastxtend.multiloss.init_loss': ('multiloss.html#init_loss', 'fastxtend/multiloss.py')},
            'fastxtend.optimizer.adan': { 'fastxtend.optimizer.adan.Adan': ('optimizer.adan.html#adan', 'fastxtend/optimizer/adan.py'),
                                          'fastxtend.optimizer.adan.AdanForEachOptimizer': ( 'optimizer.adan.html#adanforeachoptimizer',
                                                                                             'fastxtend/optimizer/adan.py'),
                                          'fastxtend.optimizer.adan.AdanForEachOptimizer.__init__': ( 'optimizer.adan.html#adanforeachoptimizer.__init__',
                                                                                                      'fastxtend/optimizer/adan.py'),
                                          'fastxtend.optimizer.adan.AdanForEachOptimizer.step': ( 'optimizer.adan.html#adanforeachoptimizer.step',
                                                                                                  'fastxtend/optimizer/adan.py'),
                                          'fastxtend.optimizer.adan.AdanLargeBatchLR': ( 'optimizer.adan.html#adanlargebatchlr',
                                                                                         'fastxtend/optimizer/adan.py'),
                                          'fastxtend.optimizer.adan.adan': ('optimizer.adan.html#adan', 'fastxtend/optimizer/adan.py'),
                                          'fastxtend.optimizer.adan.adan_foreach_step': ( 'optimizer.adan.html#adan_foreach_step',
                                                                                          'fastxtend/optimizer/adan.py'),
                                          'fastxtend.optimizer.adan.adan_jit_step': ( 'optimizer.adan.html#adan_jit_step',
                                                                                      'fastxtend/optimizer/adan.py'),
                                          'fastxtend.optimizer.adan.adan_setup': ( 'optimizer.adan.html#adan_setup',
                                                                                   'fastxtend/optimizer/adan.py'),
                                          'fastxtend.optimizer.adan.adan_step': ( 'optimizer.adan.html#adan_step',
                                                                                  'fastxtend/optimizer/adan.py'),
                                          'fastxtend.optimizer.adan.debias': ('optimizer.adan.html#debias', 'fastxtend/optimizer/adan.py')},
            'fastxtend.optimizer.all': {},
            'fastxtend.optimizer.eightbit': { 'fastxtend.optimizer.eightbit.AdamW8bitOptimizer': ( 'optimizer.eightbit.html#adamw8bitoptimizer',
                                                                                                   'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.AdamW8bitOptimizer.__init__': ( 'optimizer.eightbit.html#adamw8bitoptimizer.__init__',
                                                                                                            'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.EightBit1StateOptimizer': ( 'optimizer.eightbit.html#eightbit1stateoptimizer',
                                                                                                        'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.EightBit1StateOptimizer.__init__': ( 'optimizer.eightbit.html#eightbit1stateoptimizer.__init__',
                                                                                                                 'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.EightBit1StateOptimizer.update_step': ( 'optimizer.eightbit.html#eightbit1stateoptimizer.update_step',
                                                                                                                    'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.EightBit2StateOptimizer': ( 'optimizer.eightbit.html#eightbit2stateoptimizer',
                                                                                                        'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.EightBit2StateOptimizer.__init__': ( 'optimizer.eightbit.html#eightbit2stateoptimizer.__init__',
                                                                                                                 'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.EightBit2StateOptimizer.update_step': ( 'optimizer.eightbit.html#eightbit2stateoptimizer.update_step',
                                                                                                                    'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.EightBitCommon': ( 'optimizer.eightbit.html#eightbitcommon',
                                                                                               'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.EightBitCommon.step': ( 'optimizer.eightbit.html#eightbitcommon.step',
                                                                                                    'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.EightBitFastaiAdapter': ( 'optimizer.eightbit.html#eightbitfastaiadapter',
                                                                                                      'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.EightBitFastaiAdapter._set_hyper': ( 'optimizer.eightbit.html#eightbitfastaiadapter._set_hyper',
                                                                                                                 'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.EightBitFastaiAdapter._set_require_grad': ( 'optimizer.eightbit.html#eightbitfastaiadapter._set_require_grad',
                                                                                                                        'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.EightBitFastaiAdapter.clear_state': ( 'optimizer.eightbit.html#eightbitfastaiadapter.clear_state',
                                                                                                                  'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.EightBitFastaiAdapter.freeze': ( 'optimizer.eightbit.html#eightbitfastaiadapter.freeze',
                                                                                                             'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.EightBitFastaiAdapter.freeze_to': ( 'optimizer.eightbit.html#eightbitfastaiadapter.freeze_to',
                                                                                                                'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.EightBitFastaiAdapter.get_config': ( 'optimizer.eightbit.html#eightbitfastaiadapter.get_config',
                                                                                                                 'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.EightBitFastaiAdapter.get_params': ( 'optimizer.eightbit.html#eightbitfastaiadapter.get_params',
                                                                                                                 'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.EightBitFastaiAdapter.hypers': ( 'optimizer.eightbit.html#eightbitfastaiadapter.hypers',
                                                                                                             'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.EightBitFastaiAdapter.param_lists': ( 'optimizer.eightbit.html#eightbitfastaiadapter.param_lists',
                                                                                                                  'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.EightBitFastaiAdapter.set_hyper': ( 'optimizer.eightbit.html#eightbitfastaiadapter.set_hyper',
                                                                                                                'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.EightBitFastaiAdapter.set_hypers': ( 'optimizer.eightbit.html#eightbitfastaiadapter.set_hypers',
                                                                                                                 'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.EightBitFastaiAdapter.unfreeze': ( 'optimizer.eightbit.html#eightbitfastaiadapter.unfreeze',
                                                                                                               'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.LAMB8bitOptimizer': ( 'optimizer.eightbit.html#lamb8bitoptimizer',
                                                                                                  'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.LAMB8bitOptimizer.__init__': ( 'optimizer.eightbit.html#lamb8bitoptimizer.__init__',
                                                                                                           'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.LARS8bitOptimizer': ( 'optimizer.eightbit.html#lars8bitoptimizer',
                                                                                                  'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.LARS8bitOptimizer.__init__': ( 'optimizer.eightbit.html#lars8bitoptimizer.__init__',
                                                                                                           'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.Lion8bitOptimizer': ( 'optimizer.eightbit.html#lion8bitoptimizer',
                                                                                                  'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.Lion8bitOptimizer.__init__': ( 'optimizer.eightbit.html#lion8bitoptimizer.__init__',
                                                                                                           'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.RMSProp8bitOptimizer': ( 'optimizer.eightbit.html#rmsprop8bitoptimizer',
                                                                                                     'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.RMSProp8bitOptimizer.__init__': ( 'optimizer.eightbit.html#rmsprop8bitoptimizer.__init__',
                                                                                                              'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.SGD8bitOptimizer': ( 'optimizer.eightbit.html#sgd8bitoptimizer',
                                                                                                 'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit.SGD8bitOptimizer.__init__': ( 'optimizer.eightbit.html#sgd8bitoptimizer.__init__',
                                                                                                          'fastxtend/optimizer/eightbit.py'),
                                              'fastxtend.optimizer.eightbit._convert_params': ( 'optimizer.eightbit.html#_convert_params',
                                                                                                'fastxtend/optimizer/eightbit.py')},
            'fastxtend.optimizer.foreach': { 'fastxtend.optimizer.foreach.AdamForEachOptimizer': ( 'optimizer.foreach.html#adamforeachoptimizer',
                                                                                                   'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.AdamForEachOptimizer.step': ( 'optimizer.foreach.html#adamforeachoptimizer.step',
                                                                                                        'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.ForEachOptimizer': ( 'optimizer.foreach.html#foreachoptimizer',
                                                                                               'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.ForEachOptimizer.__init__': ( 'optimizer.foreach.html#foreachoptimizer.__init__',
                                                                                                        'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.LambForEachOptimizer': ( 'optimizer.foreach.html#lambforeachoptimizer',
                                                                                                   'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.RAdamForEachOptimizer': ( 'optimizer.foreach.html#radamforeachoptimizer',
                                                                                                    'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.RAdamForEachOptimizer.step': ( 'optimizer.foreach.html#radamforeachoptimizer.step',
                                                                                                         'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.RangerForEachOptimizer': ( 'optimizer.foreach.html#rangerforeachoptimizer',
                                                                                                     'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.RangerForEachOptimizer.__init__': ( 'optimizer.foreach.html#rangerforeachoptimizer.__init__',
                                                                                                              'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.RangerForEachOptimizer._init_state': ( 'optimizer.foreach.html#rangerforeachoptimizer._init_state',
                                                                                                                 'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.RangerForEachOptimizer.clear_state': ( 'optimizer.foreach.html#rangerforeachoptimizer.clear_state',
                                                                                                                 'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.RangerForEachOptimizer.load_state_dict': ( 'optimizer.foreach.html#rangerforeachoptimizer.load_state_dict',
                                                                                                                     'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.RangerForEachOptimizer.state_dict': ( 'optimizer.foreach.html#rangerforeachoptimizer.state_dict',
                                                                                                                'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.RangerForEachOptimizer.step': ( 'optimizer.foreach.html#rangerforeachoptimizer.step',
                                                                                                          'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.SGDForEachOptimizer': ( 'optimizer.foreach.html#sgdforeachoptimizer',
                                                                                                  'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.SGDForEachOptimizer.step': ( 'optimizer.foreach.html#sgdforeachoptimizer.step',
                                                                                                       'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.adam_foreach_step': ( 'optimizer.foreach.html#adam_foreach_step',
                                                                                                'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.lamb_foreach_step': ( 'optimizer.foreach.html#lamb_foreach_step',
                                                                                                'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.lamb_jit_substep': ( 'optimizer.foreach.html#lamb_jit_substep',
                                                                                               'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.radam_foreach_step': ( 'optimizer.foreach.html#radam_foreach_step',
                                                                                                 'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.ranger_foreach_step': ( 'optimizer.foreach.html#ranger_foreach_step',
                                                                                                  'fastxtend/optimizer/foreach.py'),
                                             'fastxtend.optimizer.foreach.sgd_foreach_step': ( 'optimizer.foreach.html#sgd_foreach_step',
                                                                                               'fastxtend/optimizer/foreach.py')},
            'fastxtend.optimizer.fused': { 'fastxtend.optimizer.fused.Adam': ('optimizer.fused.html#adam', 'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.Lamb': ('optimizer.fused.html#lamb', 'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.Larc': ('optimizer.fused.html#larc', 'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.QHAdam': ( 'optimizer.fused.html#qhadam',
                                                                                 'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.RAdam': ( 'optimizer.fused.html#radam',
                                                                                'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.RMSProp': ( 'optimizer.fused.html#rmsprop',
                                                                                  'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.Ranger': ( 'optimizer.fused.html#ranger',
                                                                                 'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.SGD': ('optimizer.fused.html#sgd', 'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.adam': ('optimizer.fused.html#adam', 'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.lamb': ('optimizer.fused.html#lamb', 'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.larc': ('optimizer.fused.html#larc', 'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.qhadam': ( 'optimizer.fused.html#qhadam',
                                                                                 'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.radam': ( 'optimizer.fused.html#radam',
                                                                                'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.ranger': ( 'optimizer.fused.html#ranger',
                                                                                 'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.rmsprop': ( 'optimizer.fused.html#rmsprop',
                                                                                  'fastxtend/optimizer/fused.py'),
                                           'fastxtend.optimizer.fused.sgd': ('optimizer.fused.html#sgd', 'fastxtend/optimizer/fused.py')},
            'fastxtend.optimizer.lion': { 'fastxtend.optimizer.lion.Lion': ('optimizer.lion.html#lion', 'fastxtend/optimizer/lion.py'),
                                          'fastxtend.optimizer.lion.LionForEachOptimizer': ( 'optimizer.lion.html#lionforeachoptimizer',
                                                                                             'fastxtend/optimizer/lion.py'),
                                          'fastxtend.optimizer.lion.LionForEachOptimizer.__init__': ( 'optimizer.lion.html#lionforeachoptimizer.__init__',
                                                                                                      'fastxtend/optimizer/lion.py'),
                                          'fastxtend.optimizer.lion.LionForEachOptimizer.step': ( 'optimizer.lion.html#lionforeachoptimizer.step',
                                                                                                  'fastxtend/optimizer/lion.py'),
                                          'fastxtend.optimizer.lion.lion': ('optimizer.lion.html#lion', 'fastxtend/optimizer/lion.py'),
                                          'fastxtend.optimizer.lion.lion_foreach_step': ( 'optimizer.lion.html#lion_foreach_step',
                                                                                          'fastxtend/optimizer/lion.py'),
                                          'fastxtend.optimizer.lion.lion_step': ( 'optimizer.lion.html#lion_step',
                                                                                  'fastxtend/optimizer/lion.py')},
            'fastxtend.optimizer.sophia': { 'fastxtend.optimizer.sophia.Sophia': ( 'optimizer.sophia.html#sophia',
                                                                                   'fastxtend/optimizer/sophia.py'),
                                            'fastxtend.optimizer.sophia.SophiaCallback': ( 'optimizer.sophia.html#sophiacallback',
                                                                                           'fastxtend/optimizer/sophia.py'),
                                            'fastxtend.optimizer.sophia.SophiaCallback.__init__': ( 'optimizer.sophia.html#sophiacallback.__init__',
                                                                                                    'fastxtend/optimizer/sophia.py'),
                                            'fastxtend.optimizer.sophia.SophiaCallback.after_step': ( 'optimizer.sophia.html#sophiacallback.after_step',
                                                                                                      'fastxtend/optimizer/sophia.py'),
                                            'fastxtend.optimizer.sophia.SophiaCallback.before_fit': ( 'optimizer.sophia.html#sophiacallback.before_fit',
                                                                                                      'fastxtend/optimizer/sophia.py'),
                                            'fastxtend.optimizer.sophia.SophiaCallback.before_loss': ( 'optimizer.sophia.html#sophiacallback.before_loss',
                                                                                                       'fastxtend/optimizer/sophia.py'),
                                            'fastxtend.optimizer.sophia.SophiaCallback.before_step': ( 'optimizer.sophia.html#sophiacallback.before_step',
                                                                                                       'fastxtend/optimizer/sophia.py'),
                                            'fastxtend.optimizer.sophia.SophiaForEachOptimizer': ( 'optimizer.sophia.html#sophiaforeachoptimizer',
                                                                                                   'fastxtend/optimizer/sophia.py'),
                                            'fastxtend.optimizer.sophia.SophiaForEachOptimizer.__init__': ( 'optimizer.sophia.html#sophiaforeachoptimizer.__init__',
                                                                                                            'fastxtend/optimizer/sophia.py'),
                                            'fastxtend.optimizer.sophia.SophiaForEachOptimizer.clear_state': ( 'optimizer.sophia.html#sophiaforeachoptimizer.clear_state',
                                                                                                               'fastxtend/optimizer/sophia.py'),
                                            'fastxtend.optimizer.sophia.SophiaForEachOptimizer.step': ( 'optimizer.sophia.html#sophiaforeachoptimizer.step',
                                                                                                        'fastxtend/optimizer/sophia.py'),
                                            'fastxtend.optimizer.sophia.SophiaForEachOptimizer.update_sophia_hypers': ( 'optimizer.sophia.html#sophiaforeachoptimizer.update_sophia_hypers',
                                                                                                                        'fastxtend/optimizer/sophia.py'),
                                            'fastxtend.optimizer.sophia.SophiaHessian': ( 'optimizer.sophia.html#sophiahessian',
                                                                                          'fastxtend/optimizer/sophia.py'),
                                            'fastxtend.optimizer.sophia.SophiaOptimizer': ( 'optimizer.sophia.html#sophiaoptimizer',
                                                                                            'fastxtend/optimizer/sophia.py'),
                                            'fastxtend.optimizer.sophia.SophiaOptimizer.__init__': ( 'optimizer.sophia.html#sophiaoptimizer.__init__',
                                                                                                     'fastxtend/optimizer/sophia.py'),
                                            'fastxtend.optimizer.sophia.SophiaOptimizer.clear_state': ( 'optimizer.sophia.html#sophiaoptimizer.clear_state',
                                                                                                        'fastxtend/optimizer/sophia.py'),
                                            'fastxtend.optimizer.sophia.SophiaOptimizer.step': ( 'optimizer.sophia.html#sophiaoptimizer.step',
                                                                                                 'fastxtend/optimizer/sophia.py'),
                                            'fastxtend.optimizer.sophia.SophiaOptimizer.update_sophia_hypers': ( 'optimizer.sophia.html#sophiaoptimizer.update_sophia_hypers',
                                                                                                                 'fastxtend/optimizer/sophia.py'),
                                            'fastxtend.optimizer.sophia.sophia': ( 'optimizer.sophia.html#sophia',
                                                                                   'fastxtend/optimizer/sophia.py'),
                                            'fastxtend.optimizer.sophia.sophia_foreach_step': ( 'optimizer.sophia.html#sophia_foreach_step',
                                                                                                'fastxtend/optimizer/sophia.py'),
                                            'fastxtend.optimizer.sophia.sophia_step': ( 'optimizer.sophia.html#sophia_step',
                                                                                        'fastxtend/optimizer/sophia.py')},
            'fastxtend.optimizer.stableadam': { 'fastxtend.optimizer.stableadam.StableAdam': ( 'optimizer.stableadam.html#stableadam',
                                                                                               'fastxtend/optimizer/stableadam.py'),
                                                'fastxtend.optimizer.stableadam.StableAdamForEachOptimizer': ( 'optimizer.stableadam.html#stableadamforeachoptimizer',
                                                                                                               'fastxtend/optimizer/stableadam.py'),
                                                'fastxtend.optimizer.stableadam.StableAdamForEachOptimizer.step': ( 'optimizer.stableadam.html#stableadamforeachoptimizer.step',
                                                                                                                    'fastxtend/optimizer/stableadam.py'),
                                                'fastxtend.optimizer.stableadam.debias': ( 'optimizer.stableadam.html#debias',
                                                                                           'fastxtend/optimizer/stableadam.py'),
                                                'fastxtend.optimizer.stableadam.stable_adam_foreach_step': ( 'optimizer.stableadam.html#stable_adam_foreach_step',
                                                                                                             'fastxtend/optimizer/stableadam.py'),
                                                'fastxtend.optimizer.stableadam.stable_adam_jit_substep': ( 'optimizer.stableadam.html#stable_adam_jit_substep',
                                                                                                            'fastxtend/optimizer/stableadam.py'),
                                                'fastxtend.optimizer.stableadam.stable_adam_step': ( 'optimizer.stableadam.html#stable_adam_step',
                                                                                                     'fastxtend/optimizer/stableadam.py'),
                                                'fastxtend.optimizer.stableadam.stableadam': ( 'optimizer.stableadam.html#stableadam',
                                                                                               'fastxtend/optimizer/stableadam.py')},
            'fastxtend.optimizer.torchscript': { 'fastxtend.optimizer.torchscript.JitLookahead': ( 'optimizer.torchscript.html#jitlookahead',
                                                                                                   'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.JitLookahead.__init__': ( 'optimizer.torchscript.html#jitlookahead.__init__',
                                                                                                            'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.JitLookahead._init_state': ( 'optimizer.torchscript.html#jitlookahead._init_state',
                                                                                                               'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.JitLookahead.clear_state': ( 'optimizer.torchscript.html#jitlookahead.clear_state',
                                                                                                               'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.JitLookahead.load_state_dict': ( 'optimizer.torchscript.html#jitlookahead.load_state_dict',
                                                                                                                   'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.JitLookahead.state_dict': ( 'optimizer.torchscript.html#jitlookahead.state_dict',
                                                                                                              'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.JitLookahead.step': ( 'optimizer.torchscript.html#jitlookahead.step',
                                                                                                        'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.JitOptimizer': ( 'optimizer.torchscript.html#jitoptimizer',
                                                                                                   'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.JitOptimizer.__init__': ( 'optimizer.torchscript.html#jitoptimizer.__init__',
                                                                                                            'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.JitOptimizer.step': ( 'optimizer.torchscript.html#jitoptimizer.step',
                                                                                                        'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript._update': ( 'optimizer.torchscript.html#_update',
                                                                                              'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.adam_jit_step': ( 'optimizer.torchscript.html#adam_jit_step',
                                                                                                    'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.lamb_jit_step': ( 'optimizer.torchscript.html#lamb_jit_step',
                                                                                                    'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.larc_jit_step': ( 'optimizer.torchscript.html#larc_jit_step',
                                                                                                    'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.qhadam_jit_step': ( 'optimizer.torchscript.html#qhadam_jit_step',
                                                                                                      'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.radam_jit_step': ( 'optimizer.torchscript.html#radam_jit_step',
                                                                                                     'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.ranger_jit_step': ( 'optimizer.torchscript.html#ranger_jit_step',
                                                                                                      'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.rmsprop_jit_step': ( 'optimizer.torchscript.html#rmsprop_jit_step',
                                                                                                       'fastxtend/optimizer/torchscript.py'),
                                                 'fastxtend.optimizer.torchscript.sgd_jit_step': ( 'optimizer.torchscript.html#sgd_jit_step',
                                                                                                   'fastxtend/optimizer/torchscript.py')},
            'fastxtend.patches': {},
            'fastxtend.schedulers': { 'fastxtend.schedulers.Learner.fit_cos_anneal': ( 'schedulers.html#learner.fit_cos_anneal',
                                                                                       'fastxtend/schedulers.py'),
                                      'fastxtend.schedulers.Learner.fit_flat_varied': ( 'schedulers.html#learner.fit_flat_varied',
                                                                                        'fastxtend/schedulers.py'),
                                      'fastxtend.schedulers.Learner.fit_flat_warmup': ( 'schedulers.html#learner.fit_flat_warmup',
                                                                                        'fastxtend/schedulers.py')},
            'fastxtend.test_utils': { 'fastxtend.test_utils.tst_param': ('test_utils.html#tst_param', 'fastxtend/test_utils.py'),
                                      'fastxtend.test_utils.tst_params': ('test_utils.html#tst_params', 'fastxtend/test_utils.py')},
            'fastxtend.text.all': {},
            'fastxtend.text.huggingface': { 'fastxtend.text.huggingface.HuggingFaceCallback': ( 'text.huggingface.html#huggingfacecallback',
                                                                                                'fastxtend/text/huggingface.py'),
                                            'fastxtend.text.huggingface.HuggingFaceCallback.__init__': ( 'text.huggingface.html#huggingfacecallback.__init__',
                                                                                                         'fastxtend/text/huggingface.py'),
                                            'fastxtend.text.huggingface.HuggingFaceCallback.after_create': ( 'text.huggingface.html#huggingfacecallback.after_create',
                                                                                                             'fastxtend/text/huggingface.py'),
                                            'fastxtend.text.huggingface.HuggingFaceCallback.after_fit': ( 'text.huggingface.html#huggingfacecallback.after_fit',
                                                                                                          'fastxtend/text/huggingface.py'),
                                            'fastxtend.text.huggingface.HuggingFaceCallback.after_loss': ( 'text.huggingface.html#huggingfacecallback.after_loss',
                                                                                                           'fastxtend/text/huggingface.py'),
                                            'fastxtend.text.huggingface.HuggingFaceCallback.after_pred': ( 'text.huggingface.html#huggingfacecallback.after_pred',
                                                                                                           'fastxtend/text/huggingface.py'),
                                            'fastxtend.text.huggingface.HuggingFaceCallback.before_batch': ( 'text.huggingface.html#huggingfacecallback.before_batch',
                                                                                                             'fastxtend/text/huggingface.py'),
                                            'fastxtend.text.huggingface.HuggingFaceLoader': ( 'text.huggingface.html#huggingfaceloader',
                                                                                              'fastxtend/text/huggingface.py'),
                                            'fastxtend.text.huggingface.HuggingFaceLoader.__init__': ( 'text.huggingface.html#huggingfaceloader.__init__',
                                                                                                       'fastxtend/text/huggingface.py'),
                                            'fastxtend.text.huggingface.HuggingFaceLoader.__iter__': ( 'text.huggingface.html#huggingfaceloader.__iter__',
                                                                                                       'fastxtend/text/huggingface.py'),
                                            'fastxtend.text.huggingface.HuggingFaceLoader.bs': ( 'text.huggingface.html#huggingfaceloader.bs',
                                                                                                 'fastxtend/text/huggingface.py'),
                                            'fastxtend.text.huggingface.HuggingFaceLoss': ( 'text.huggingface.html#huggingfaceloss',
                                                                                            'fastxtend/text/huggingface.py'),
                                            'fastxtend.text.huggingface.HuggingFaceLoss.__call__': ( 'text.huggingface.html#huggingfaceloss.__call__',
                                                                                                     'fastxtend/text/huggingface.py'),
                                            'fastxtend.text.huggingface.HuggingFaceLoss.__init__': ( 'text.huggingface.html#huggingfaceloss.__init__',
                                                                                                     'fastxtend/text/huggingface.py'),
                                            'fastxtend.text.huggingface.HuggingFaceWrapper': ( 'text.huggingface.html#huggingfacewrapper',
                                                                                               'fastxtend/text/huggingface.py'),
                                            'fastxtend.text.huggingface.HuggingFaceWrapper.__init__': ( 'text.huggingface.html#huggingfacewrapper.__init__',
                                                                                                        'fastxtend/text/huggingface.py'),
                                            'fastxtend.text.huggingface.HuggingFaceWrapper.forward': ( 'text.huggingface.html#huggingfacewrapper.forward',
                                                                                                       'fastxtend/text/huggingface.py')},
            'fastxtend.torch_core': { 'fastxtend.torch_core.TensorCategory': ('torch_core.html#tensorcategory', 'fastxtend/torch_core.py'),
                                      'fastxtend.torch_core.TensorCategory.show': ( 'torch_core.html#tensorcategory.show',
                                                                                    'fastxtend/torch_core.py'),
                                      'fastxtend.torch_core.TensorMultiCategory': ( 'torch_core.html#tensormulticategory',
                                                                                    'fastxtend/torch_core.py'),
                                      'fastxtend.torch_core.TensorMultiCategory.show': ( 'torch_core.html#tensormulticategory.show',
                                                                                         'fastxtend/torch_core.py')},
            'fastxtend.transform': { 'fastxtend.transform.BatchRandTransform': ( 'transform.html#batchrandtransform',
                                                                                 'fastxtend/transform.py'),
                                     'fastxtend.transform.BatchRandTransform.__call__': ( 'transform.html#batchrandtransform.__call__',
                                                                                          'fastxtend/transform.py'),
                                     'fastxtend.transform.BatchRandTransform.__init__': ( 'transform.html#batchrandtransform.__init__',
                                                                                          'fastxtend/transform.py'),
                                     'fastxtend.transform.BatchRandTransform._do_call': ( 'transform.html#batchrandtransform._do_call',
                                                                                          'fastxtend/transform.py'),
                                     'fastxtend.transform.BatchRandTransform._do_f': ( 'transform.html#batchrandtransform._do_f',
                                                                                       'fastxtend/transform.py'),
                                     'fastxtend.transform.BatchRandTransform.before_call': ( 'transform.html#batchrandtransform.before_call',
                                                                                             'fastxtend/transform.py')},
            'fastxtend.utils': { 'fastxtend.utils.clean_ipython_hist': ('utils.html#clean_ipython_hist', 'fastxtend/utils.py'),
                                 'fastxtend.utils.clean_traceback': ('utils.html#clean_traceback', 'fastxtend/utils.py'),
                                 'fastxtend.utils.convert_to_int': ('utils.html#convert_to_int', 'fastxtend/utils.py'),
                                 'fastxtend.utils.free_gpu_memory': ('utils.html#free_gpu_memory', 'fastxtend/utils.py'),
                                 'fastxtend.utils.less_random': ('utils.html#less_random', 'fastxtend/utils.py'),
                                 'fastxtend.utils.pil_to_numpy': ('utils.html#pil_to_numpy', 'fastxtend/utils.py'),
                                 'fastxtend.utils.scale_time': ('utils.html#scale_time', 'fastxtend/utils.py')},
            'fastxtend.vision.all': {},
            'fastxtend.vision.augment.all': {},
            'fastxtend.vision.augment.batch': { 'fastxtend.vision.augment.batch.ChannelDrop': ( 'vision.augment.batch.html#channeldrop',
                                                                                                'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.ChannelDrop.__init__': ( 'vision.augment.batch.html#channeldrop.__init__',
                                                                                                         'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.ChannelDrop.encodes': ( 'vision.augment.batch.html#channeldrop.encodes',
                                                                                                        'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.Grayscale': ( 'vision.augment.batch.html#grayscale',
                                                                                              'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.Grayscale.__init__': ( 'vision.augment.batch.html#grayscale.__init__',
                                                                                                       'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.Grayscale.encodes': ( 'vision.augment.batch.html#grayscale.encodes',
                                                                                                      'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.Grayscale.to': ( 'vision.augment.batch.html#grayscale.to',
                                                                                                 'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.GrayscaleMode': ( 'vision.augment.batch.html#grayscalemode',
                                                                                                  'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.RandomErasingBatch': ( 'vision.augment.batch.html#randomerasingbatch',
                                                                                                       'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.RandomErasingBatch.__init__': ( 'vision.augment.batch.html#randomerasingbatch.__init__',
                                                                                                                'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.RandomErasingBatch._bounds': ( 'vision.augment.batch.html#randomerasingbatch._bounds',
                                                                                                               'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.RandomErasingBatch.encodes': ( 'vision.augment.batch.html#randomerasingbatch.encodes',
                                                                                                               'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.RandomNoise': ( 'vision.augment.batch.html#randomnoise',
                                                                                                'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.RandomNoise.__init__': ( 'vision.augment.batch.html#randomnoise.__init__',
                                                                                                         'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.RandomNoise.encodes': ( 'vision.augment.batch.html#randomnoise.encodes',
                                                                                                        'fastxtend/vision/augment/batch.py'),
                                                'fastxtend.vision.augment.batch.affine_transforms': ( 'vision.augment.batch.html#affine_transforms',
                                                                                                      'fastxtend/vision/augment/batch.py')},
            'fastxtend.vision.augment.itemtensor': { 'fastxtend.vision.augment.itemtensor.TensorImage._do_crop_pad': ( 'vision.augment.itemtensor.html#tensorimage._do_crop_pad',
                                                                                                                       'fastxtend/vision/augment/itemtensor.py'),
                                                     'fastxtend.vision.augment.itemtensor.TensorImage.crop_pad': ( 'vision.augment.itemtensor.html#tensorimage.crop_pad',
                                                                                                                   'fastxtend/vision/augment/itemtensor.py'),
                                                     'fastxtend.vision.augment.itemtensor.TensorImage.resize': ( 'vision.augment.itemtensor.html#tensorimage.resize',
                                                                                                                 'fastxtend/vision/augment/itemtensor.py'),
                                                     'fastxtend.vision.augment.itemtensor.TensorMask._do_crop_pad': ( 'vision.augment.itemtensor.html#tensormask._do_crop_pad',
                                                                                                                      'fastxtend/vision/augment/itemtensor.py'),
                                                     'fastxtend.vision.augment.itemtensor.TensorMask.crop_pad': ( 'vision.augment.itemtensor.html#tensormask.crop_pad',
                                                                                                                  'fastxtend/vision/augment/itemtensor.py'),
                                                     'fastxtend.vision.augment.itemtensor.TensorMask.resize': ( 'vision.augment.itemtensor.html#tensormask.resize',
                                                                                                                'fastxtend/vision/augment/itemtensor.py'),
                                                     'fastxtend.vision.augment.itemtensor._resize': ( 'vision.augment.itemtensor.html#_resize',
                                                                                                      'fastxtend/vision/augment/itemtensor.py'),
                                                     'fastxtend.vision.augment.itemtensor.encodes': ( 'vision.augment.itemtensor.html#encodes',
                                                                                                      'fastxtend/vision/augment/itemtensor.py')},
            'fastxtend.vision.data': { 'fastxtend.vision.data.ImageCPUBlock': ( 'vision.data.html#imagecpublock',
                                                                                'fastxtend/vision/data.py'),
                                       'fastxtend.vision.data.MaskCPUBlock': ('vision.data.html#maskcpublock', 'fastxtend/vision/data.py'),
                                       'fastxtend.vision.data.PostBatchAsItem': ( 'vision.data.html#postbatchasitem',
                                                                                  'fastxtend/vision/data.py'),
                                       'fastxtend.vision.data.PostBatchAsItem.decodes': ( 'vision.data.html#postbatchasitem.decodes',
                                                                                          'fastxtend/vision/data.py'),
                                       'fastxtend.vision.data.PostBatchAsItem.encodes': ( 'vision.data.html#postbatchasitem.encodes',
                                                                                          'fastxtend/vision/data.py'),
                                       'fastxtend.vision.data.PreBatchAsItem': ( 'vision.data.html#prebatchasitem',
                                                                                 'fastxtend/vision/data.py'),
                                       'fastxtend.vision.data.PreBatchAsItem.decodes': ( 'vision.data.html#prebatchasitem.decodes',
                                                                                         'fastxtend/vision/data.py'),
                                       'fastxtend.vision.data.PreBatchAsItem.encodes': ( 'vision.data.html#prebatchasitem.encodes',
                                                                                         'fastxtend/vision/data.py')},
            'fastxtend.vision.models.all': {},
            'fastxtend.vision.models.attention_modules': { 'fastxtend.vision.models.attention_modules.AttentionGate': ( 'vision.models.attention_modules.html#attentiongate',
                                                                                                                        'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.AttentionGate.__init__': ( 'vision.models.attention_modules.html#attentiongate.__init__',
                                                                                                                                 'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.AttentionGate.forward': ( 'vision.models.attention_modules.html#attentiongate.forward',
                                                                                                                                'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.ECA': ( 'vision.models.attention_modules.html#eca',
                                                                                                              'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.ECA.__init__': ( 'vision.models.attention_modules.html#eca.__init__',
                                                                                                                       'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.ECA.forward': ( 'vision.models.attention_modules.html#eca.forward',
                                                                                                                      'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.ShuffleAttention': ( 'vision.models.attention_modules.html#shuffleattention',
                                                                                                                           'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.ShuffleAttention.__init__': ( 'vision.models.attention_modules.html#shuffleattention.__init__',
                                                                                                                                    'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.ShuffleAttention.forward': ( 'vision.models.attention_modules.html#shuffleattention.forward',
                                                                                                                                   'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.TripletAttention': ( 'vision.models.attention_modules.html#tripletattention',
                                                                                                                           'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.TripletAttention.__init__': ( 'vision.models.attention_modules.html#tripletattention.__init__',
                                                                                                                                    'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.TripletAttention.forward': ( 'vision.models.attention_modules.html#tripletattention.forward',
                                                                                                                                   'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.ZPool': ( 'vision.models.attention_modules.html#zpool',
                                                                                                                'fastxtend/vision/models/attention_modules.py'),
                                                           'fastxtend.vision.models.attention_modules.ZPool.forward': ( 'vision.models.attention_modules.html#zpool.forward',
                                                                                                                        'fastxtend/vision/models/attention_modules.py')},
            'fastxtend.vision.models.pooling': { 'fastxtend.vision.models.pooling.BlurPool': ( 'vision.models.pooling.html#blurpool',
                                                                                               'fastxtend/vision/models/pooling.py'),
                                                 'fastxtend.vision.models.pooling.MaxBlurPool': ( 'vision.models.pooling.html#maxblurpool',
                                                                                                  'fastxtend/vision/models/pooling.py')},
            'fastxtend.vision.models.xresnet': { 'fastxtend.vision.models.xresnet.ECABlock': ( 'vision.models.xresnet.html#ecablock',
                                                                                               'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.ECAResNeXtBlock': ( 'vision.models.xresnet.html#ecaresnextblock',
                                                                                                      'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.ResBlock': ( 'vision.models.xresnet.html#resblock',
                                                                                               'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.ResBlock.__init__': ( 'vision.models.xresnet.html#resblock.__init__',
                                                                                                        'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.ResBlock.forward': ( 'vision.models.xresnet.html#resblock.forward',
                                                                                                       'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.ResNeXtBlock': ( 'vision.models.xresnet.html#resnextblock',
                                                                                                   'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.SABlock': ( 'vision.models.xresnet.html#sablock',
                                                                                              'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.SAResNeXtBlock': ( 'vision.models.xresnet.html#saresnextblock',
                                                                                                     'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.SEBlock': ( 'vision.models.xresnet.html#seblock',
                                                                                              'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.SEResNeXtBlock': ( 'vision.models.xresnet.html#seresnextblock',
                                                                                                     'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.TABlock': ( 'vision.models.xresnet.html#tablock',
                                                                                              'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.TAResNeXtBlock': ( 'vision.models.xresnet.html#taresnextblock',
                                                                                                     'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.XResNet': ( 'vision.models.xresnet.html#xresnet',
                                                                                              'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.XResNet.__init__': ( 'vision.models.xresnet.html#xresnet.__init__',
                                                                                                       'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.XResNet._make_blocks': ( 'vision.models.xresnet.html#xresnet._make_blocks',
                                                                                                           'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.XResNet._make_head': ( 'vision.models.xresnet.html#xresnet._make_head',
                                                                                                         'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.XResNet._make_layer': ( 'vision.models.xresnet.html#xresnet._make_layer',
                                                                                                          'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xeca_resnet101': ( 'vision.models.xresnet.html#xeca_resnet101',
                                                                                                     'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xeca_resnet18': ( 'vision.models.xresnet.html#xeca_resnet18',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xeca_resnet34': ( 'vision.models.xresnet.html#xeca_resnet34',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xeca_resnet50': ( 'vision.models.xresnet.html#xeca_resnet50',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xeca_resnext101': ( 'vision.models.xresnet.html#xeca_resnext101',
                                                                                                      'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xeca_resnext18': ( 'vision.models.xresnet.html#xeca_resnext18',
                                                                                                     'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xeca_resnext34': ( 'vision.models.xresnet.html#xeca_resnext34',
                                                                                                     'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xeca_resnext50': ( 'vision.models.xresnet.html#xeca_resnext50',
                                                                                                     'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xresnet101': ( 'vision.models.xresnet.html#xresnet101',
                                                                                                 'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xresnet18': ( 'vision.models.xresnet.html#xresnet18',
                                                                                                'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xresnet34': ( 'vision.models.xresnet.html#xresnet34',
                                                                                                'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xresnet50': ( 'vision.models.xresnet.html#xresnet50',
                                                                                                'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xresnext101': ( 'vision.models.xresnet.html#xresnext101',
                                                                                                  'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xresnext18': ( 'vision.models.xresnet.html#xresnext18',
                                                                                                 'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xresnext34': ( 'vision.models.xresnet.html#xresnext34',
                                                                                                 'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xresnext50': ( 'vision.models.xresnet.html#xresnext50',
                                                                                                 'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xsa_resnet101': ( 'vision.models.xresnet.html#xsa_resnet101',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xsa_resnet18': ( 'vision.models.xresnet.html#xsa_resnet18',
                                                                                                   'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xsa_resnet34': ( 'vision.models.xresnet.html#xsa_resnet34',
                                                                                                   'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xsa_resnet50': ( 'vision.models.xresnet.html#xsa_resnet50',
                                                                                                   'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xsa_resnext101': ( 'vision.models.xresnet.html#xsa_resnext101',
                                                                                                     'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xsa_resnext18': ( 'vision.models.xresnet.html#xsa_resnext18',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xsa_resnext34': ( 'vision.models.xresnet.html#xsa_resnext34',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xsa_resnext50': ( 'vision.models.xresnet.html#xsa_resnext50',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xse_resnet101': ( 'vision.models.xresnet.html#xse_resnet101',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xse_resnet18': ( 'vision.models.xresnet.html#xse_resnet18',
                                                                                                   'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xse_resnet34': ( 'vision.models.xresnet.html#xse_resnet34',
                                                                                                   'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xse_resnet50': ( 'vision.models.xresnet.html#xse_resnet50',
                                                                                                   'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xse_resnext101': ( 'vision.models.xresnet.html#xse_resnext101',
                                                                                                     'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xse_resnext18': ( 'vision.models.xresnet.html#xse_resnext18',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xse_resnext34': ( 'vision.models.xresnet.html#xse_resnext34',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xse_resnext50': ( 'vision.models.xresnet.html#xse_resnext50',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xta_resnet101': ( 'vision.models.xresnet.html#xta_resnet101',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xta_resnet18': ( 'vision.models.xresnet.html#xta_resnet18',
                                                                                                   'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xta_resnet34': ( 'vision.models.xresnet.html#xta_resnet34',
                                                                                                   'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xta_resnet50': ( 'vision.models.xresnet.html#xta_resnet50',
                                                                                                   'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xta_resnext101': ( 'vision.models.xresnet.html#xta_resnext101',
                                                                                                     'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xta_resnext18': ( 'vision.models.xresnet.html#xta_resnext18',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xta_resnext34': ( 'vision.models.xresnet.html#xta_resnext34',
                                                                                                    'fastxtend/vision/models/xresnet.py'),
                                                 'fastxtend.vision.models.xresnet.xta_resnext50': ( 'vision.models.xresnet.html#xta_resnext50',
                                                                                                    'fastxtend/vision/models/xresnet.py')}}}
